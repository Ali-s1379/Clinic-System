//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Clinic_System {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("clinicDatabasaeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class clinicDatabasaeDataSet : global::System.Data.DataSet {
        
        private CLOCKING_INDataTable tableCLOCKING_IN;
        
        private COUNSELLINGDataTable tableCOUNSELLING;
        
        private DOCTORDataTable tableDOCTOR;
        
        private EXPENDITUREDataTable tableEXPENDITURE;
        
        private MEDICAL_HISTORYDataTable tableMEDICAL_HISTORY;
        
        private ORDERSDataTable tableORDERS;
        
        private PATIENTDataTable tablePATIENT;
        
        private SECRETARYDataTable tableSECRETARY;
        
        private global::System.Data.DataRelation relationFK_CLOCKING_REGISTERI_SECRETAR;
        
        private global::System.Data.DataRelation relationFK_COUNSELL_FORMING_DOCTOR;
        
        private global::System.Data.DataRelation relationFK_COUNSELL_PARTICIPA_PATIENT;
        
        private global::System.Data.DataRelation relationFK_COUNSELL_REGISTERI_SECRETAR;
        
        private global::System.Data.DataRelation relationFK_EXPENDIT_REGISTERI_SECRETAR;
        
        private global::System.Data.DataRelation relationFK_MEDICAL__HAS_PATIENT;
        
        private global::System.Data.DataRelation relationFK_ORDERS_REQUESTIN_DOCTOR;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public clinicDatabasaeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected clinicDatabasaeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CLOCKING_IN"] != null)) {
                    base.Tables.Add(new CLOCKING_INDataTable(ds.Tables["CLOCKING_IN"]));
                }
                if ((ds.Tables["COUNSELLING"] != null)) {
                    base.Tables.Add(new COUNSELLINGDataTable(ds.Tables["COUNSELLING"]));
                }
                if ((ds.Tables["DOCTOR"] != null)) {
                    base.Tables.Add(new DOCTORDataTable(ds.Tables["DOCTOR"]));
                }
                if ((ds.Tables["EXPENDITURE"] != null)) {
                    base.Tables.Add(new EXPENDITUREDataTable(ds.Tables["EXPENDITURE"]));
                }
                if ((ds.Tables["MEDICAL_HISTORY"] != null)) {
                    base.Tables.Add(new MEDICAL_HISTORYDataTable(ds.Tables["MEDICAL_HISTORY"]));
                }
                if ((ds.Tables["ORDERS"] != null)) {
                    base.Tables.Add(new ORDERSDataTable(ds.Tables["ORDERS"]));
                }
                if ((ds.Tables["PATIENT"] != null)) {
                    base.Tables.Add(new PATIENTDataTable(ds.Tables["PATIENT"]));
                }
                if ((ds.Tables["SECRETARY"] != null)) {
                    base.Tables.Add(new SECRETARYDataTable(ds.Tables["SECRETARY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CLOCKING_INDataTable CLOCKING_IN {
            get {
                return this.tableCLOCKING_IN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public COUNSELLINGDataTable COUNSELLING {
            get {
                return this.tableCOUNSELLING;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DOCTORDataTable DOCTOR {
            get {
                return this.tableDOCTOR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXPENDITUREDataTable EXPENDITURE {
            get {
                return this.tableEXPENDITURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MEDICAL_HISTORYDataTable MEDICAL_HISTORY {
            get {
                return this.tableMEDICAL_HISTORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ORDERSDataTable ORDERS {
            get {
                return this.tableORDERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PATIENTDataTable PATIENT {
            get {
                return this.tablePATIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SECRETARYDataTable SECRETARY {
            get {
                return this.tableSECRETARY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            clinicDatabasaeDataSet cln = ((clinicDatabasaeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CLOCKING_IN"] != null)) {
                    base.Tables.Add(new CLOCKING_INDataTable(ds.Tables["CLOCKING_IN"]));
                }
                if ((ds.Tables["COUNSELLING"] != null)) {
                    base.Tables.Add(new COUNSELLINGDataTable(ds.Tables["COUNSELLING"]));
                }
                if ((ds.Tables["DOCTOR"] != null)) {
                    base.Tables.Add(new DOCTORDataTable(ds.Tables["DOCTOR"]));
                }
                if ((ds.Tables["EXPENDITURE"] != null)) {
                    base.Tables.Add(new EXPENDITUREDataTable(ds.Tables["EXPENDITURE"]));
                }
                if ((ds.Tables["MEDICAL_HISTORY"] != null)) {
                    base.Tables.Add(new MEDICAL_HISTORYDataTable(ds.Tables["MEDICAL_HISTORY"]));
                }
                if ((ds.Tables["ORDERS"] != null)) {
                    base.Tables.Add(new ORDERSDataTable(ds.Tables["ORDERS"]));
                }
                if ((ds.Tables["PATIENT"] != null)) {
                    base.Tables.Add(new PATIENTDataTable(ds.Tables["PATIENT"]));
                }
                if ((ds.Tables["SECRETARY"] != null)) {
                    base.Tables.Add(new SECRETARYDataTable(ds.Tables["SECRETARY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCLOCKING_IN = ((CLOCKING_INDataTable)(base.Tables["CLOCKING_IN"]));
            if ((initTable == true)) {
                if ((this.tableCLOCKING_IN != null)) {
                    this.tableCLOCKING_IN.InitVars();
                }
            }
            this.tableCOUNSELLING = ((COUNSELLINGDataTable)(base.Tables["COUNSELLING"]));
            if ((initTable == true)) {
                if ((this.tableCOUNSELLING != null)) {
                    this.tableCOUNSELLING.InitVars();
                }
            }
            this.tableDOCTOR = ((DOCTORDataTable)(base.Tables["DOCTOR"]));
            if ((initTable == true)) {
                if ((this.tableDOCTOR != null)) {
                    this.tableDOCTOR.InitVars();
                }
            }
            this.tableEXPENDITURE = ((EXPENDITUREDataTable)(base.Tables["EXPENDITURE"]));
            if ((initTable == true)) {
                if ((this.tableEXPENDITURE != null)) {
                    this.tableEXPENDITURE.InitVars();
                }
            }
            this.tableMEDICAL_HISTORY = ((MEDICAL_HISTORYDataTable)(base.Tables["MEDICAL_HISTORY"]));
            if ((initTable == true)) {
                if ((this.tableMEDICAL_HISTORY != null)) {
                    this.tableMEDICAL_HISTORY.InitVars();
                }
            }
            this.tableORDERS = ((ORDERSDataTable)(base.Tables["ORDERS"]));
            if ((initTable == true)) {
                if ((this.tableORDERS != null)) {
                    this.tableORDERS.InitVars();
                }
            }
            this.tablePATIENT = ((PATIENTDataTable)(base.Tables["PATIENT"]));
            if ((initTable == true)) {
                if ((this.tablePATIENT != null)) {
                    this.tablePATIENT.InitVars();
                }
            }
            this.tableSECRETARY = ((SECRETARYDataTable)(base.Tables["SECRETARY"]));
            if ((initTable == true)) {
                if ((this.tableSECRETARY != null)) {
                    this.tableSECRETARY.InitVars();
                }
            }
            this.relationFK_CLOCKING_REGISTERI_SECRETAR = this.Relations["FK_CLOCKING_REGISTERI_SECRETAR"];
            this.relationFK_COUNSELL_FORMING_DOCTOR = this.Relations["FK_COUNSELL_FORMING_DOCTOR"];
            this.relationFK_COUNSELL_PARTICIPA_PATIENT = this.Relations["FK_COUNSELL_PARTICIPA_PATIENT"];
            this.relationFK_COUNSELL_REGISTERI_SECRETAR = this.Relations["FK_COUNSELL_REGISTERI_SECRETAR"];
            this.relationFK_EXPENDIT_REGISTERI_SECRETAR = this.Relations["FK_EXPENDIT_REGISTERI_SECRETAR"];
            this.relationFK_MEDICAL__HAS_PATIENT = this.Relations["FK_MEDICAL__HAS_PATIENT"];
            this.relationFK_ORDERS_REQUESTIN_DOCTOR = this.Relations["FK_ORDERS_REQUESTIN_DOCTOR"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "clinicDatabasaeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/clinicDatabasaeDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCLOCKING_IN = new CLOCKING_INDataTable();
            base.Tables.Add(this.tableCLOCKING_IN);
            this.tableCOUNSELLING = new COUNSELLINGDataTable();
            base.Tables.Add(this.tableCOUNSELLING);
            this.tableDOCTOR = new DOCTORDataTable();
            base.Tables.Add(this.tableDOCTOR);
            this.tableEXPENDITURE = new EXPENDITUREDataTable();
            base.Tables.Add(this.tableEXPENDITURE);
            this.tableMEDICAL_HISTORY = new MEDICAL_HISTORYDataTable();
            base.Tables.Add(this.tableMEDICAL_HISTORY);
            this.tableORDERS = new ORDERSDataTable();
            base.Tables.Add(this.tableORDERS);
            this.tablePATIENT = new PATIENTDataTable();
            base.Tables.Add(this.tablePATIENT);
            this.tableSECRETARY = new SECRETARYDataTable();
            base.Tables.Add(this.tableSECRETARY);
            this.relationFK_CLOCKING_REGISTERI_SECRETAR = new global::System.Data.DataRelation("FK_CLOCKING_REGISTERI_SECRETAR", new global::System.Data.DataColumn[] {
                        this.tableSECRETARY.PERSONNEL_ID_SECRETARYColumn}, new global::System.Data.DataColumn[] {
                        this.tableCLOCKING_IN.PERSONNEL_ID_SECRETARYColumn}, false);
            this.Relations.Add(this.relationFK_CLOCKING_REGISTERI_SECRETAR);
            this.relationFK_COUNSELL_FORMING_DOCTOR = new global::System.Data.DataRelation("FK_COUNSELL_FORMING_DOCTOR", new global::System.Data.DataColumn[] {
                        this.tableDOCTOR.PERSONNEL_ID_DOCTORColumn}, new global::System.Data.DataColumn[] {
                        this.tableCOUNSELLING.PERSONNEL_ID_DOCTORColumn}, false);
            this.Relations.Add(this.relationFK_COUNSELL_FORMING_DOCTOR);
            this.relationFK_COUNSELL_PARTICIPA_PATIENT = new global::System.Data.DataRelation("FK_COUNSELL_PARTICIPA_PATIENT", new global::System.Data.DataColumn[] {
                        this.tablePATIENT.PATIENT_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCOUNSELLING.PATIENT_IDColumn}, false);
            this.Relations.Add(this.relationFK_COUNSELL_PARTICIPA_PATIENT);
            this.relationFK_COUNSELL_REGISTERI_SECRETAR = new global::System.Data.DataRelation("FK_COUNSELL_REGISTERI_SECRETAR", new global::System.Data.DataColumn[] {
                        this.tableSECRETARY.PERSONNEL_ID_SECRETARYColumn}, new global::System.Data.DataColumn[] {
                        this.tableCOUNSELLING.PERSONNEL_ID_SECRETARYColumn}, false);
            this.Relations.Add(this.relationFK_COUNSELL_REGISTERI_SECRETAR);
            this.relationFK_EXPENDIT_REGISTERI_SECRETAR = new global::System.Data.DataRelation("FK_EXPENDIT_REGISTERI_SECRETAR", new global::System.Data.DataColumn[] {
                        this.tableSECRETARY.PERSONNEL_ID_SECRETARYColumn}, new global::System.Data.DataColumn[] {
                        this.tableEXPENDITURE.PERSONNEL_ID_SECRETARYColumn}, false);
            this.Relations.Add(this.relationFK_EXPENDIT_REGISTERI_SECRETAR);
            this.relationFK_MEDICAL__HAS_PATIENT = new global::System.Data.DataRelation("FK_MEDICAL__HAS_PATIENT", new global::System.Data.DataColumn[] {
                        this.tablePATIENT.PATIENT_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMEDICAL_HISTORY.PATIENT_IDColumn}, false);
            this.Relations.Add(this.relationFK_MEDICAL__HAS_PATIENT);
            this.relationFK_ORDERS_REQUESTIN_DOCTOR = new global::System.Data.DataRelation("FK_ORDERS_REQUESTIN_DOCTOR", new global::System.Data.DataColumn[] {
                        this.tableDOCTOR.PERSONNEL_ID_DOCTORColumn}, new global::System.Data.DataColumn[] {
                        this.tableORDERS.PERSONNEL_ID_DOCTORColumn}, false);
            this.Relations.Add(this.relationFK_ORDERS_REQUESTIN_DOCTOR);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCLOCKING_IN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCOUNSELLING() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeDOCTOR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeEXPENDITURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeMEDICAL_HISTORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeORDERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializePATIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeSECRETARY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CLOCKING_INRowChangeEventHandler(object sender, CLOCKING_INRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void COUNSELLINGRowChangeEventHandler(object sender, COUNSELLINGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void DOCTORRowChangeEventHandler(object sender, DOCTORRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void EXPENDITURERowChangeEventHandler(object sender, EXPENDITURERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void MEDICAL_HISTORYRowChangeEventHandler(object sender, MEDICAL_HISTORYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ORDERSRowChangeEventHandler(object sender, ORDERSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void PATIENTRowChangeEventHandler(object sender, PATIENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void SECRETARYRowChangeEventHandler(object sender, SECRETARYRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CLOCKING_INDataTable : global::System.Data.TypedTableBase<CLOCKING_INRow> {
            
            private global::System.Data.DataColumn columnLOGIN_DATE;
            
            private global::System.Data.DataColumn columnLOGIN_TIME;
            
            private global::System.Data.DataColumn columnPERSONNEL_ID_SECRETARY;
            
            private global::System.Data.DataColumn columnLOGOUT_TIME;
            
            private global::System.Data.DataColumn columnLEAVE_OF_ABSENCE_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INDataTable() {
                this.TableName = "CLOCKING_IN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CLOCKING_INDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected CLOCKING_INDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOGIN_DATEColumn {
                get {
                    return this.columnLOGIN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOGIN_TIMEColumn {
                get {
                    return this.columnLOGIN_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_ID_SECRETARYColumn {
                get {
                    return this.columnPERSONNEL_ID_SECRETARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOGOUT_TIMEColumn {
                get {
                    return this.columnLOGOUT_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LEAVE_OF_ABSENCE_DATEColumn {
                get {
                    return this.columnLEAVE_OF_ABSENCE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INRow this[int index] {
                get {
                    return ((CLOCKING_INRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CLOCKING_INRowChangeEventHandler CLOCKING_INRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CLOCKING_INRowChangeEventHandler CLOCKING_INRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CLOCKING_INRowChangeEventHandler CLOCKING_INRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CLOCKING_INRowChangeEventHandler CLOCKING_INRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCLOCKING_INRow(CLOCKING_INRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INRow AddCLOCKING_INRow(System.DateTime LOGIN_DATE, System.TimeSpan LOGIN_TIME, SECRETARYRow parentSECRETARYRowByFK_CLOCKING_REGISTERI_SECRETAR, System.TimeSpan LOGOUT_TIME, System.DateTime LEAVE_OF_ABSENCE_DATE) {
                CLOCKING_INRow rowCLOCKING_INRow = ((CLOCKING_INRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOGIN_DATE,
                        LOGIN_TIME,
                        null,
                        LOGOUT_TIME,
                        LEAVE_OF_ABSENCE_DATE};
                if ((parentSECRETARYRowByFK_CLOCKING_REGISTERI_SECRETAR != null)) {
                    columnValuesArray[2] = parentSECRETARYRowByFK_CLOCKING_REGISTERI_SECRETAR[0];
                }
                rowCLOCKING_INRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCLOCKING_INRow);
                return rowCLOCKING_INRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INRow FindByLOGIN_DATELOGIN_TIMEPERSONNEL_ID_SECRETARY(System.DateTime LOGIN_DATE, System.TimeSpan LOGIN_TIME, int PERSONNEL_ID_SECRETARY) {
                return ((CLOCKING_INRow)(this.Rows.Find(new object[] {
                            LOGIN_DATE,
                            LOGIN_TIME,
                            PERSONNEL_ID_SECRETARY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CLOCKING_INDataTable cln = ((CLOCKING_INDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CLOCKING_INDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnLOGIN_DATE = base.Columns["LOGIN_DATE"];
                this.columnLOGIN_TIME = base.Columns["LOGIN_TIME"];
                this.columnPERSONNEL_ID_SECRETARY = base.Columns["PERSONNEL_ID_SECRETARY"];
                this.columnLOGOUT_TIME = base.Columns["LOGOUT_TIME"];
                this.columnLEAVE_OF_ABSENCE_DATE = base.Columns["LEAVE_OF_ABSENCE_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnLOGIN_DATE = new global::System.Data.DataColumn("LOGIN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGIN_DATE);
                this.columnLOGIN_TIME = new global::System.Data.DataColumn("LOGIN_TIME", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGIN_TIME);
                this.columnPERSONNEL_ID_SECRETARY = new global::System.Data.DataColumn("PERSONNEL_ID_SECRETARY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_ID_SECRETARY);
                this.columnLOGOUT_TIME = new global::System.Data.DataColumn("LOGOUT_TIME", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGOUT_TIME);
                this.columnLEAVE_OF_ABSENCE_DATE = new global::System.Data.DataColumn("LEAVE_OF_ABSENCE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEAVE_OF_ABSENCE_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOGIN_DATE,
                                this.columnLOGIN_TIME,
                                this.columnPERSONNEL_ID_SECRETARY}, true));
                this.columnLOGIN_DATE.AllowDBNull = false;
                this.columnLOGIN_TIME.AllowDBNull = false;
                this.columnPERSONNEL_ID_SECRETARY.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INRow NewCLOCKING_INRow() {
                return ((CLOCKING_INRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CLOCKING_INRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CLOCKING_INRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CLOCKING_INRowChanged != null)) {
                    this.CLOCKING_INRowChanged(this, new CLOCKING_INRowChangeEvent(((CLOCKING_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CLOCKING_INRowChanging != null)) {
                    this.CLOCKING_INRowChanging(this, new CLOCKING_INRowChangeEvent(((CLOCKING_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CLOCKING_INRowDeleted != null)) {
                    this.CLOCKING_INRowDeleted(this, new CLOCKING_INRowChangeEvent(((CLOCKING_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CLOCKING_INRowDeleting != null)) {
                    this.CLOCKING_INRowDeleting(this, new CLOCKING_INRowChangeEvent(((CLOCKING_INRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCLOCKING_INRow(CLOCKING_INRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CLOCKING_INDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class COUNSELLINGDataTable : global::System.Data.TypedTableBase<COUNSELLINGRow> {
            
            private global::System.Data.DataColumn columnDATE_COUNSELLING;
            
            private global::System.Data.DataColumn columnPERSONNEL_ID_SECRETARY;
            
            private global::System.Data.DataColumn columnPERSONNEL_ID_DOCTOR;
            
            private global::System.Data.DataColumn columnPATIENT_ID;
            
            private global::System.Data.DataColumn columnTIME_COUNSELLING;
            
            private global::System.Data.DataColumn columnDURATION_COUNSELLING;
            
            private global::System.Data.DataColumn columnNUMBER_OF_SESSIONS;
            
            private global::System.Data.DataColumn columnPRICE_PAID;
            
            private global::System.Data.DataColumn columnMEDICATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGDataTable() {
                this.TableName = "COUNSELLING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal COUNSELLINGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected COUNSELLINGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATE_COUNSELLINGColumn {
                get {
                    return this.columnDATE_COUNSELLING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_ID_SECRETARYColumn {
                get {
                    return this.columnPERSONNEL_ID_SECRETARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_ID_DOCTORColumn {
                get {
                    return this.columnPERSONNEL_ID_DOCTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PATIENT_IDColumn {
                get {
                    return this.columnPATIENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TIME_COUNSELLINGColumn {
                get {
                    return this.columnTIME_COUNSELLING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DURATION_COUNSELLINGColumn {
                get {
                    return this.columnDURATION_COUNSELLING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NUMBER_OF_SESSIONSColumn {
                get {
                    return this.columnNUMBER_OF_SESSIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRICE_PAIDColumn {
                get {
                    return this.columnPRICE_PAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MEDICATIONColumn {
                get {
                    return this.columnMEDICATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow this[int index] {
                get {
                    return ((COUNSELLINGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event COUNSELLINGRowChangeEventHandler COUNSELLINGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event COUNSELLINGRowChangeEventHandler COUNSELLINGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event COUNSELLINGRowChangeEventHandler COUNSELLINGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event COUNSELLINGRowChangeEventHandler COUNSELLINGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCOUNSELLINGRow(COUNSELLINGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow AddCOUNSELLINGRow(System.DateTime DATE_COUNSELLING, SECRETARYRow parentSECRETARYRowByFK_COUNSELL_REGISTERI_SECRETAR, DOCTORRow parentDOCTORRowByFK_COUNSELL_FORMING_DOCTOR, PATIENTRow parentPATIENTRowByFK_COUNSELL_PARTICIPA_PATIENT, System.TimeSpan TIME_COUNSELLING, int DURATION_COUNSELLING, int NUMBER_OF_SESSIONS, int PRICE_PAID, string MEDICATION) {
                COUNSELLINGRow rowCOUNSELLINGRow = ((COUNSELLINGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DATE_COUNSELLING,
                        null,
                        null,
                        null,
                        TIME_COUNSELLING,
                        DURATION_COUNSELLING,
                        NUMBER_OF_SESSIONS,
                        PRICE_PAID,
                        MEDICATION};
                if ((parentSECRETARYRowByFK_COUNSELL_REGISTERI_SECRETAR != null)) {
                    columnValuesArray[1] = parentSECRETARYRowByFK_COUNSELL_REGISTERI_SECRETAR[0];
                }
                if ((parentDOCTORRowByFK_COUNSELL_FORMING_DOCTOR != null)) {
                    columnValuesArray[2] = parentDOCTORRowByFK_COUNSELL_FORMING_DOCTOR[0];
                }
                if ((parentPATIENTRowByFK_COUNSELL_PARTICIPA_PATIENT != null)) {
                    columnValuesArray[3] = parentPATIENTRowByFK_COUNSELL_PARTICIPA_PATIENT[0];
                }
                rowCOUNSELLINGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCOUNSELLINGRow);
                return rowCOUNSELLINGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow FindByDATE_COUNSELLINGPATIENT_ID(System.DateTime DATE_COUNSELLING, int PATIENT_ID) {
                return ((COUNSELLINGRow)(this.Rows.Find(new object[] {
                            DATE_COUNSELLING,
                            PATIENT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                COUNSELLINGDataTable cln = ((COUNSELLINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new COUNSELLINGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnDATE_COUNSELLING = base.Columns["DATE_COUNSELLING"];
                this.columnPERSONNEL_ID_SECRETARY = base.Columns["PERSONNEL_ID_SECRETARY"];
                this.columnPERSONNEL_ID_DOCTOR = base.Columns["PERSONNEL_ID_DOCTOR"];
                this.columnPATIENT_ID = base.Columns["PATIENT_ID"];
                this.columnTIME_COUNSELLING = base.Columns["TIME_COUNSELLING"];
                this.columnDURATION_COUNSELLING = base.Columns["DURATION_COUNSELLING"];
                this.columnNUMBER_OF_SESSIONS = base.Columns["NUMBER_OF_SESSIONS"];
                this.columnPRICE_PAID = base.Columns["PRICE_PAID"];
                this.columnMEDICATION = base.Columns["MEDICATION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnDATE_COUNSELLING = new global::System.Data.DataColumn("DATE_COUNSELLING", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_COUNSELLING);
                this.columnPERSONNEL_ID_SECRETARY = new global::System.Data.DataColumn("PERSONNEL_ID_SECRETARY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_ID_SECRETARY);
                this.columnPERSONNEL_ID_DOCTOR = new global::System.Data.DataColumn("PERSONNEL_ID_DOCTOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_ID_DOCTOR);
                this.columnPATIENT_ID = new global::System.Data.DataColumn("PATIENT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENT_ID);
                this.columnTIME_COUNSELLING = new global::System.Data.DataColumn("TIME_COUNSELLING", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIME_COUNSELLING);
                this.columnDURATION_COUNSELLING = new global::System.Data.DataColumn("DURATION_COUNSELLING", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDURATION_COUNSELLING);
                this.columnNUMBER_OF_SESSIONS = new global::System.Data.DataColumn("NUMBER_OF_SESSIONS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMBER_OF_SESSIONS);
                this.columnPRICE_PAID = new global::System.Data.DataColumn("PRICE_PAID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_PAID);
                this.columnMEDICATION = new global::System.Data.DataColumn("MEDICATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEDICATION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDATE_COUNSELLING,
                                this.columnPATIENT_ID}, true));
                this.columnDATE_COUNSELLING.AllowDBNull = false;
                this.columnPERSONNEL_ID_SECRETARY.AllowDBNull = false;
                this.columnPERSONNEL_ID_DOCTOR.AllowDBNull = false;
                this.columnPATIENT_ID.AllowDBNull = false;
                this.columnTIME_COUNSELLING.AllowDBNull = false;
                this.columnDURATION_COUNSELLING.AllowDBNull = false;
                this.columnNUMBER_OF_SESSIONS.AllowDBNull = false;
                this.columnPRICE_PAID.AllowDBNull = false;
                this.columnMEDICATION.MaxLength = 120;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow NewCOUNSELLINGRow() {
                return ((COUNSELLINGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new COUNSELLINGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(COUNSELLINGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.COUNSELLINGRowChanged != null)) {
                    this.COUNSELLINGRowChanged(this, new COUNSELLINGRowChangeEvent(((COUNSELLINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.COUNSELLINGRowChanging != null)) {
                    this.COUNSELLINGRowChanging(this, new COUNSELLINGRowChangeEvent(((COUNSELLINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.COUNSELLINGRowDeleted != null)) {
                    this.COUNSELLINGRowDeleted(this, new COUNSELLINGRowChangeEvent(((COUNSELLINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.COUNSELLINGRowDeleting != null)) {
                    this.COUNSELLINGRowDeleting(this, new COUNSELLINGRowChangeEvent(((COUNSELLINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCOUNSELLINGRow(COUNSELLINGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "COUNSELLINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DOCTORDataTable : global::System.Data.TypedTableBase<DOCTORRow> {
            
            private global::System.Data.DataColumn columnPERSONNEL_ID_DOCTOR;
            
            private global::System.Data.DataColumn columnNAME_DOCTOR;
            
            private global::System.Data.DataColumn columnFAMILY_NAME_DOCTOR;
            
            private global::System.Data.DataColumn columnCONTACT_NUMBER_DOCTOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORDataTable() {
                this.TableName = "DOCTOR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal DOCTORDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected DOCTORDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_ID_DOCTORColumn {
                get {
                    return this.columnPERSONNEL_ID_DOCTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAME_DOCTORColumn {
                get {
                    return this.columnNAME_DOCTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FAMILY_NAME_DOCTORColumn {
                get {
                    return this.columnFAMILY_NAME_DOCTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CONTACT_NUMBER_DOCTORColumn {
                get {
                    return this.columnCONTACT_NUMBER_DOCTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRow this[int index] {
                get {
                    return ((DOCTORRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DOCTORRowChangeEventHandler DOCTORRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DOCTORRowChangeEventHandler DOCTORRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DOCTORRowChangeEventHandler DOCTORRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DOCTORRowChangeEventHandler DOCTORRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddDOCTORRow(DOCTORRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRow AddDOCTORRow(int PERSONNEL_ID_DOCTOR, string NAME_DOCTOR, string FAMILY_NAME_DOCTOR, string CONTACT_NUMBER_DOCTOR) {
                DOCTORRow rowDOCTORRow = ((DOCTORRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PERSONNEL_ID_DOCTOR,
                        NAME_DOCTOR,
                        FAMILY_NAME_DOCTOR,
                        CONTACT_NUMBER_DOCTOR};
                rowDOCTORRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDOCTORRow);
                return rowDOCTORRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRow FindByPERSONNEL_ID_DOCTOR(int PERSONNEL_ID_DOCTOR) {
                return ((DOCTORRow)(this.Rows.Find(new object[] {
                            PERSONNEL_ID_DOCTOR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DOCTORDataTable cln = ((DOCTORDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DOCTORDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnPERSONNEL_ID_DOCTOR = base.Columns["PERSONNEL_ID_DOCTOR"];
                this.columnNAME_DOCTOR = base.Columns["NAME_DOCTOR"];
                this.columnFAMILY_NAME_DOCTOR = base.Columns["FAMILY_NAME_DOCTOR"];
                this.columnCONTACT_NUMBER_DOCTOR = base.Columns["CONTACT_NUMBER_DOCTOR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnPERSONNEL_ID_DOCTOR = new global::System.Data.DataColumn("PERSONNEL_ID_DOCTOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_ID_DOCTOR);
                this.columnNAME_DOCTOR = new global::System.Data.DataColumn("NAME_DOCTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_DOCTOR);
                this.columnFAMILY_NAME_DOCTOR = new global::System.Data.DataColumn("FAMILY_NAME_DOCTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAMILY_NAME_DOCTOR);
                this.columnCONTACT_NUMBER_DOCTOR = new global::System.Data.DataColumn("CONTACT_NUMBER_DOCTOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTACT_NUMBER_DOCTOR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPERSONNEL_ID_DOCTOR}, true));
                this.columnPERSONNEL_ID_DOCTOR.AllowDBNull = false;
                this.columnPERSONNEL_ID_DOCTOR.Unique = true;
                this.columnNAME_DOCTOR.AllowDBNull = false;
                this.columnNAME_DOCTOR.MaxLength = 30;
                this.columnFAMILY_NAME_DOCTOR.AllowDBNull = false;
                this.columnFAMILY_NAME_DOCTOR.MaxLength = 30;
                this.columnCONTACT_NUMBER_DOCTOR.AllowDBNull = false;
                this.columnCONTACT_NUMBER_DOCTOR.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRow NewDOCTORRow() {
                return ((DOCTORRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DOCTORRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DOCTORRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DOCTORRowChanged != null)) {
                    this.DOCTORRowChanged(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DOCTORRowChanging != null)) {
                    this.DOCTORRowChanging(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DOCTORRowDeleted != null)) {
                    this.DOCTORRowDeleted(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DOCTORRowDeleting != null)) {
                    this.DOCTORRowDeleting(this, new DOCTORRowChangeEvent(((DOCTORRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveDOCTORRow(DOCTORRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DOCTORDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXPENDITUREDataTable : global::System.Data.TypedTableBase<EXPENDITURERow> {
            
            private global::System.Data.DataColumn columnRECIPT_ID;
            
            private global::System.Data.DataColumn columnPERSONNEL_ID_SECRETARY;
            
            private global::System.Data.DataColumn columnPRICE_EXPENDITURE;
            
            private global::System.Data.DataColumn columnEXPENDITURE_TYPE;
            
            private global::System.Data.DataColumn columnEXPENDITURE_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITUREDataTable() {
                this.TableName = "EXPENDITURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EXPENDITUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected EXPENDITUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RECIPT_IDColumn {
                get {
                    return this.columnRECIPT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_ID_SECRETARYColumn {
                get {
                    return this.columnPERSONNEL_ID_SECRETARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRICE_EXPENDITUREColumn {
                get {
                    return this.columnPRICE_EXPENDITURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXPENDITURE_TYPEColumn {
                get {
                    return this.columnEXPENDITURE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXPENDITURE_DATEColumn {
                get {
                    return this.columnEXPENDITURE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITURERow this[int index] {
                get {
                    return ((EXPENDITURERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXPENDITURERowChangeEventHandler EXPENDITURERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXPENDITURERowChangeEventHandler EXPENDITURERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXPENDITURERowChangeEventHandler EXPENDITURERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXPENDITURERowChangeEventHandler EXPENDITURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddEXPENDITURERow(EXPENDITURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITURERow AddEXPENDITURERow(int RECIPT_ID, SECRETARYRow parentSECRETARYRowByFK_EXPENDIT_REGISTERI_SECRETAR, int PRICE_EXPENDITURE, string EXPENDITURE_TYPE, System.DateTime EXPENDITURE_DATE) {
                EXPENDITURERow rowEXPENDITURERow = ((EXPENDITURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RECIPT_ID,
                        null,
                        PRICE_EXPENDITURE,
                        EXPENDITURE_TYPE,
                        EXPENDITURE_DATE};
                if ((parentSECRETARYRowByFK_EXPENDIT_REGISTERI_SECRETAR != null)) {
                    columnValuesArray[1] = parentSECRETARYRowByFK_EXPENDIT_REGISTERI_SECRETAR[0];
                }
                rowEXPENDITURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXPENDITURERow);
                return rowEXPENDITURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITURERow FindByRECIPT_ID(int RECIPT_ID) {
                return ((EXPENDITURERow)(this.Rows.Find(new object[] {
                            RECIPT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EXPENDITUREDataTable cln = ((EXPENDITUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXPENDITUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnRECIPT_ID = base.Columns["RECIPT_ID"];
                this.columnPERSONNEL_ID_SECRETARY = base.Columns["PERSONNEL_ID_SECRETARY"];
                this.columnPRICE_EXPENDITURE = base.Columns["PRICE_EXPENDITURE"];
                this.columnEXPENDITURE_TYPE = base.Columns["EXPENDITURE_TYPE"];
                this.columnEXPENDITURE_DATE = base.Columns["EXPENDITURE_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnRECIPT_ID = new global::System.Data.DataColumn("RECIPT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECIPT_ID);
                this.columnPERSONNEL_ID_SECRETARY = new global::System.Data.DataColumn("PERSONNEL_ID_SECRETARY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_ID_SECRETARY);
                this.columnPRICE_EXPENDITURE = new global::System.Data.DataColumn("PRICE_EXPENDITURE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_EXPENDITURE);
                this.columnEXPENDITURE_TYPE = new global::System.Data.DataColumn("EXPENDITURE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENDITURE_TYPE);
                this.columnEXPENDITURE_DATE = new global::System.Data.DataColumn("EXPENDITURE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENDITURE_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRECIPT_ID}, true));
                this.columnRECIPT_ID.AllowDBNull = false;
                this.columnRECIPT_ID.Unique = true;
                this.columnPERSONNEL_ID_SECRETARY.AllowDBNull = false;
                this.columnPRICE_EXPENDITURE.AllowDBNull = false;
                this.columnEXPENDITURE_TYPE.AllowDBNull = false;
                this.columnEXPENDITURE_TYPE.MaxLength = 60;
                this.columnEXPENDITURE_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITURERow NewEXPENDITURERow() {
                return ((EXPENDITURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXPENDITURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EXPENDITURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXPENDITURERowChanged != null)) {
                    this.EXPENDITURERowChanged(this, new EXPENDITURERowChangeEvent(((EXPENDITURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXPENDITURERowChanging != null)) {
                    this.EXPENDITURERowChanging(this, new EXPENDITURERowChangeEvent(((EXPENDITURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXPENDITURERowDeleted != null)) {
                    this.EXPENDITURERowDeleted(this, new EXPENDITURERowChangeEvent(((EXPENDITURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXPENDITURERowDeleting != null)) {
                    this.EXPENDITURERowDeleting(this, new EXPENDITURERowChangeEvent(((EXPENDITURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveEXPENDITURERow(EXPENDITURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXPENDITUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MEDICAL_HISTORYDataTable : global::System.Data.TypedTableBase<MEDICAL_HISTORYRow> {
            
            private global::System.Data.DataColumn columnPATIENT_ID;
            
            private global::System.Data.DataColumn columnDATE_MEDICAL_HISTORY;
            
            private global::System.Data.DataColumn columnMEDICAL_CONDITION;
            
            private global::System.Data.DataColumn columnPRESCRIBED_MEDICATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYDataTable() {
                this.TableName = "MEDICAL_HISTORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal MEDICAL_HISTORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected MEDICAL_HISTORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PATIENT_IDColumn {
                get {
                    return this.columnPATIENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATE_MEDICAL_HISTORYColumn {
                get {
                    return this.columnDATE_MEDICAL_HISTORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MEDICAL_CONDITIONColumn {
                get {
                    return this.columnMEDICAL_CONDITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRESCRIBED_MEDICATIONColumn {
                get {
                    return this.columnPRESCRIBED_MEDICATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYRow this[int index] {
                get {
                    return ((MEDICAL_HISTORYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event MEDICAL_HISTORYRowChangeEventHandler MEDICAL_HISTORYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event MEDICAL_HISTORYRowChangeEventHandler MEDICAL_HISTORYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event MEDICAL_HISTORYRowChangeEventHandler MEDICAL_HISTORYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event MEDICAL_HISTORYRowChangeEventHandler MEDICAL_HISTORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddMEDICAL_HISTORYRow(MEDICAL_HISTORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYRow AddMEDICAL_HISTORYRow(PATIENTRow parentPATIENTRowByFK_MEDICAL__HAS_PATIENT, System.DateTime DATE_MEDICAL_HISTORY, string MEDICAL_CONDITION, string PRESCRIBED_MEDICATION) {
                MEDICAL_HISTORYRow rowMEDICAL_HISTORYRow = ((MEDICAL_HISTORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE_MEDICAL_HISTORY,
                        MEDICAL_CONDITION,
                        PRESCRIBED_MEDICATION};
                if ((parentPATIENTRowByFK_MEDICAL__HAS_PATIENT != null)) {
                    columnValuesArray[0] = parentPATIENTRowByFK_MEDICAL__HAS_PATIENT[0];
                }
                rowMEDICAL_HISTORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMEDICAL_HISTORYRow);
                return rowMEDICAL_HISTORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYRow FindByPATIENT_IDDATE_MEDICAL_HISTORY(int PATIENT_ID, System.DateTime DATE_MEDICAL_HISTORY) {
                return ((MEDICAL_HISTORYRow)(this.Rows.Find(new object[] {
                            PATIENT_ID,
                            DATE_MEDICAL_HISTORY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MEDICAL_HISTORYDataTable cln = ((MEDICAL_HISTORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MEDICAL_HISTORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnPATIENT_ID = base.Columns["PATIENT_ID"];
                this.columnDATE_MEDICAL_HISTORY = base.Columns["DATE_MEDICAL_HISTORY"];
                this.columnMEDICAL_CONDITION = base.Columns["MEDICAL_CONDITION"];
                this.columnPRESCRIBED_MEDICATION = base.Columns["PRESCRIBED_MEDICATION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnPATIENT_ID = new global::System.Data.DataColumn("PATIENT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENT_ID);
                this.columnDATE_MEDICAL_HISTORY = new global::System.Data.DataColumn("DATE_MEDICAL_HISTORY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_MEDICAL_HISTORY);
                this.columnMEDICAL_CONDITION = new global::System.Data.DataColumn("MEDICAL_CONDITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEDICAL_CONDITION);
                this.columnPRESCRIBED_MEDICATION = new global::System.Data.DataColumn("PRESCRIBED_MEDICATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRESCRIBED_MEDICATION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPATIENT_ID,
                                this.columnDATE_MEDICAL_HISTORY}, true));
                this.columnPATIENT_ID.AllowDBNull = false;
                this.columnDATE_MEDICAL_HISTORY.AllowDBNull = false;
                this.columnMEDICAL_CONDITION.AllowDBNull = false;
                this.columnMEDICAL_CONDITION.MaxLength = 120;
                this.columnPRESCRIBED_MEDICATION.AllowDBNull = false;
                this.columnPRESCRIBED_MEDICATION.MaxLength = 120;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYRow NewMEDICAL_HISTORYRow() {
                return ((MEDICAL_HISTORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MEDICAL_HISTORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MEDICAL_HISTORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MEDICAL_HISTORYRowChanged != null)) {
                    this.MEDICAL_HISTORYRowChanged(this, new MEDICAL_HISTORYRowChangeEvent(((MEDICAL_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MEDICAL_HISTORYRowChanging != null)) {
                    this.MEDICAL_HISTORYRowChanging(this, new MEDICAL_HISTORYRowChangeEvent(((MEDICAL_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MEDICAL_HISTORYRowDeleted != null)) {
                    this.MEDICAL_HISTORYRowDeleted(this, new MEDICAL_HISTORYRowChangeEvent(((MEDICAL_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MEDICAL_HISTORYRowDeleting != null)) {
                    this.MEDICAL_HISTORYRowDeleting(this, new MEDICAL_HISTORYRowChangeEvent(((MEDICAL_HISTORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveMEDICAL_HISTORYRow(MEDICAL_HISTORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MEDICAL_HISTORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ORDERSDataTable : global::System.Data.TypedTableBase<ORDERSRow> {
            
            private global::System.Data.DataColumn columnORDER_ID;
            
            private global::System.Data.DataColumn columnPERSONNEL_ID_DOCTOR;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnPRODUCT_TYPE;
            
            private global::System.Data.DataColumn columnPRODUCT_NUMBER;
            
            private global::System.Data.DataColumn columnORDER_DATE;
            
            private global::System.Data.DataColumn columnPRICE_ORDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSDataTable() {
                this.TableName = "ORDERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ORDERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ORDERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ORDER_IDColumn {
                get {
                    return this.columnORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_ID_DOCTORColumn {
                get {
                    return this.columnPERSONNEL_ID_DOCTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_TYPEColumn {
                get {
                    return this.columnPRODUCT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_NUMBERColumn {
                get {
                    return this.columnPRODUCT_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ORDER_DATEColumn {
                get {
                    return this.columnORDER_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRICE_ORDERColumn {
                get {
                    return this.columnPRICE_ORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSRow this[int index] {
                get {
                    return ((ORDERSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ORDERSRowChangeEventHandler ORDERSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ORDERSRowChangeEventHandler ORDERSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ORDERSRowChangeEventHandler ORDERSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ORDERSRowChangeEventHandler ORDERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddORDERSRow(ORDERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSRow AddORDERSRow(int ORDER_ID, DOCTORRow parentDOCTORRowByFK_ORDERS_REQUESTIN_DOCTOR, string PRODUCT_NAME, int PRODUCT_TYPE, int PRODUCT_NUMBER, System.DateTime ORDER_DATE, int PRICE_ORDER) {
                ORDERSRow rowORDERSRow = ((ORDERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ORDER_ID,
                        null,
                        PRODUCT_NAME,
                        PRODUCT_TYPE,
                        PRODUCT_NUMBER,
                        ORDER_DATE,
                        PRICE_ORDER};
                if ((parentDOCTORRowByFK_ORDERS_REQUESTIN_DOCTOR != null)) {
                    columnValuesArray[1] = parentDOCTORRowByFK_ORDERS_REQUESTIN_DOCTOR[0];
                }
                rowORDERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowORDERSRow);
                return rowORDERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSRow FindByORDER_ID(int ORDER_ID) {
                return ((ORDERSRow)(this.Rows.Find(new object[] {
                            ORDER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ORDERSDataTable cln = ((ORDERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ORDERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnORDER_ID = base.Columns["ORDER_ID"];
                this.columnPERSONNEL_ID_DOCTOR = base.Columns["PERSONNEL_ID_DOCTOR"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnPRODUCT_TYPE = base.Columns["PRODUCT_TYPE"];
                this.columnPRODUCT_NUMBER = base.Columns["PRODUCT_NUMBER"];
                this.columnORDER_DATE = base.Columns["ORDER_DATE"];
                this.columnPRICE_ORDER = base.Columns["PRICE_ORDER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnORDER_ID = new global::System.Data.DataColumn("ORDER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_ID);
                this.columnPERSONNEL_ID_DOCTOR = new global::System.Data.DataColumn("PERSONNEL_ID_DOCTOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_ID_DOCTOR);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnPRODUCT_TYPE = new global::System.Data.DataColumn("PRODUCT_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_TYPE);
                this.columnPRODUCT_NUMBER = new global::System.Data.DataColumn("PRODUCT_NUMBER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NUMBER);
                this.columnORDER_DATE = new global::System.Data.DataColumn("ORDER_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DATE);
                this.columnPRICE_ORDER = new global::System.Data.DataColumn("PRICE_ORDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_ORDER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnORDER_ID}, true));
                this.columnORDER_ID.AllowDBNull = false;
                this.columnORDER_ID.Unique = true;
                this.columnPERSONNEL_ID_DOCTOR.AllowDBNull = false;
                this.columnPRODUCT_NAME.AllowDBNull = false;
                this.columnPRODUCT_NAME.MaxLength = 60;
                this.columnPRODUCT_TYPE.AllowDBNull = false;
                this.columnPRODUCT_NUMBER.AllowDBNull = false;
                this.columnORDER_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSRow NewORDERSRow() {
                return ((ORDERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ORDERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ORDERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ORDERSRowChanged != null)) {
                    this.ORDERSRowChanged(this, new ORDERSRowChangeEvent(((ORDERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ORDERSRowChanging != null)) {
                    this.ORDERSRowChanging(this, new ORDERSRowChangeEvent(((ORDERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ORDERSRowDeleted != null)) {
                    this.ORDERSRowDeleted(this, new ORDERSRowChangeEvent(((ORDERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ORDERSRowDeleting != null)) {
                    this.ORDERSRowDeleting(this, new ORDERSRowChangeEvent(((ORDERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveORDERSRow(ORDERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ORDERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PATIENTDataTable : global::System.Data.TypedTableBase<PATIENTRow> {
            
            private global::System.Data.DataColumn columnPATIENT_ID;
            
            private global::System.Data.DataColumn columnNAME_PATIENT;
            
            private global::System.Data.DataColumn columnFAMILY_NAME_PATIENT;
            
            private global::System.Data.DataColumn columnCONTACT_NUMBER_PATIENT;
            
            private global::System.Data.DataColumn columnVISIT_DATE;
            
            private global::System.Data.DataColumn columnLINE_NUMBER;
            
            private global::System.Data.DataColumn columnREFERRAL;
            
            private global::System.Data.DataColumn columnNATIONAL_ID;
            
            private global::System.Data.DataColumn columnBIRTH_CERTIFICATE_NUMBER;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnAGE;
            
            private global::System.Data.DataColumn columnGENDER;
            
            private global::System.Data.DataColumn columnINSURANCE_ID;
            
            private global::System.Data.DataColumn columnOCCUPATION;
            
            private global::System.Data.DataColumn columnEDUCATION_DEGREE;
            
            private global::System.Data.DataColumn columnNUMBER_OF_OFFSPRINGS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTDataTable() {
                this.TableName = "PATIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal PATIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected PATIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PATIENT_IDColumn {
                get {
                    return this.columnPATIENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAME_PATIENTColumn {
                get {
                    return this.columnNAME_PATIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FAMILY_NAME_PATIENTColumn {
                get {
                    return this.columnFAMILY_NAME_PATIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CONTACT_NUMBER_PATIENTColumn {
                get {
                    return this.columnCONTACT_NUMBER_PATIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VISIT_DATEColumn {
                get {
                    return this.columnVISIT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LINE_NUMBERColumn {
                get {
                    return this.columnLINE_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REFERRALColumn {
                get {
                    return this.columnREFERRAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NATIONAL_IDColumn {
                get {
                    return this.columnNATIONAL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BIRTH_CERTIFICATE_NUMBERColumn {
                get {
                    return this.columnBIRTH_CERTIFICATE_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AGEColumn {
                get {
                    return this.columnAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GENDERColumn {
                get {
                    return this.columnGENDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSURANCE_IDColumn {
                get {
                    return this.columnINSURANCE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OCCUPATIONColumn {
                get {
                    return this.columnOCCUPATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EDUCATION_DEGREEColumn {
                get {
                    return this.columnEDUCATION_DEGREE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NUMBER_OF_OFFSPRINGSColumn {
                get {
                    return this.columnNUMBER_OF_OFFSPRINGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRow this[int index] {
                get {
                    return ((PATIENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PATIENTRowChangeEventHandler PATIENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PATIENTRowChangeEventHandler PATIENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PATIENTRowChangeEventHandler PATIENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PATIENTRowChangeEventHandler PATIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddPATIENTRow(PATIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRow AddPATIENTRow(
                        int PATIENT_ID, 
                        string NAME_PATIENT, 
                        string FAMILY_NAME_PATIENT, 
                        string CONTACT_NUMBER_PATIENT, 
                        System.DateTime VISIT_DATE, 
                        int LINE_NUMBER, 
                        string REFERRAL, 
                        int NATIONAL_ID, 
                        int BIRTH_CERTIFICATE_NUMBER, 
                        string ADDRESS, 
                        int AGE, 
                        int GENDER, 
                        int INSURANCE_ID, 
                        string OCCUPATION, 
                        int EDUCATION_DEGREE, 
                        int NUMBER_OF_OFFSPRINGS) {
                PATIENTRow rowPATIENTRow = ((PATIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PATIENT_ID,
                        NAME_PATIENT,
                        FAMILY_NAME_PATIENT,
                        CONTACT_NUMBER_PATIENT,
                        VISIT_DATE,
                        LINE_NUMBER,
                        REFERRAL,
                        NATIONAL_ID,
                        BIRTH_CERTIFICATE_NUMBER,
                        ADDRESS,
                        AGE,
                        GENDER,
                        INSURANCE_ID,
                        OCCUPATION,
                        EDUCATION_DEGREE,
                        NUMBER_OF_OFFSPRINGS};
                rowPATIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPATIENTRow);
                return rowPATIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRow FindByPATIENT_ID(int PATIENT_ID) {
                return ((PATIENTRow)(this.Rows.Find(new object[] {
                            PATIENT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PATIENTDataTable cln = ((PATIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PATIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnPATIENT_ID = base.Columns["PATIENT_ID"];
                this.columnNAME_PATIENT = base.Columns["NAME_PATIENT"];
                this.columnFAMILY_NAME_PATIENT = base.Columns["FAMILY_NAME_PATIENT"];
                this.columnCONTACT_NUMBER_PATIENT = base.Columns["CONTACT_NUMBER_PATIENT"];
                this.columnVISIT_DATE = base.Columns["VISIT_DATE"];
                this.columnLINE_NUMBER = base.Columns["LINE_NUMBER"];
                this.columnREFERRAL = base.Columns["REFERRAL"];
                this.columnNATIONAL_ID = base.Columns["NATIONAL_ID"];
                this.columnBIRTH_CERTIFICATE_NUMBER = base.Columns["BIRTH_CERTIFICATE_NUMBER"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnAGE = base.Columns["AGE"];
                this.columnGENDER = base.Columns["GENDER"];
                this.columnINSURANCE_ID = base.Columns["INSURANCE_ID"];
                this.columnOCCUPATION = base.Columns["OCCUPATION"];
                this.columnEDUCATION_DEGREE = base.Columns["EDUCATION_DEGREE"];
                this.columnNUMBER_OF_OFFSPRINGS = base.Columns["NUMBER_OF_OFFSPRINGS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnPATIENT_ID = new global::System.Data.DataColumn("PATIENT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENT_ID);
                this.columnNAME_PATIENT = new global::System.Data.DataColumn("NAME_PATIENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_PATIENT);
                this.columnFAMILY_NAME_PATIENT = new global::System.Data.DataColumn("FAMILY_NAME_PATIENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAMILY_NAME_PATIENT);
                this.columnCONTACT_NUMBER_PATIENT = new global::System.Data.DataColumn("CONTACT_NUMBER_PATIENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTACT_NUMBER_PATIENT);
                this.columnVISIT_DATE = new global::System.Data.DataColumn("VISIT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVISIT_DATE);
                this.columnLINE_NUMBER = new global::System.Data.DataColumn("LINE_NUMBER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINE_NUMBER);
                this.columnREFERRAL = new global::System.Data.DataColumn("REFERRAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERRAL);
                this.columnNATIONAL_ID = new global::System.Data.DataColumn("NATIONAL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNATIONAL_ID);
                this.columnBIRTH_CERTIFICATE_NUMBER = new global::System.Data.DataColumn("BIRTH_CERTIFICATE_NUMBER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTH_CERTIFICATE_NUMBER);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnAGE = new global::System.Data.DataColumn("AGE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGE);
                this.columnGENDER = new global::System.Data.DataColumn("GENDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGENDER);
                this.columnINSURANCE_ID = new global::System.Data.DataColumn("INSURANCE_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSURANCE_ID);
                this.columnOCCUPATION = new global::System.Data.DataColumn("OCCUPATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOCCUPATION);
                this.columnEDUCATION_DEGREE = new global::System.Data.DataColumn("EDUCATION_DEGREE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDUCATION_DEGREE);
                this.columnNUMBER_OF_OFFSPRINGS = new global::System.Data.DataColumn("NUMBER_OF_OFFSPRINGS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMBER_OF_OFFSPRINGS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPATIENT_ID}, true));
                this.columnPATIENT_ID.AllowDBNull = false;
                this.columnPATIENT_ID.Unique = true;
                this.columnNAME_PATIENT.AllowDBNull = false;
                this.columnNAME_PATIENT.MaxLength = 30;
                this.columnFAMILY_NAME_PATIENT.AllowDBNull = false;
                this.columnFAMILY_NAME_PATIENT.MaxLength = 30;
                this.columnCONTACT_NUMBER_PATIENT.AllowDBNull = false;
                this.columnCONTACT_NUMBER_PATIENT.MaxLength = 30;
                this.columnVISIT_DATE.AllowDBNull = false;
                this.columnLINE_NUMBER.AllowDBNull = false;
                this.columnREFERRAL.MaxLength = 60;
                this.columnNATIONAL_ID.AllowDBNull = false;
                this.columnBIRTH_CERTIFICATE_NUMBER.AllowDBNull = false;
                this.columnADDRESS.AllowDBNull = false;
                this.columnADDRESS.MaxLength = 180;
                this.columnAGE.AllowDBNull = false;
                this.columnGENDER.AllowDBNull = false;
                this.columnOCCUPATION.AllowDBNull = false;
                this.columnOCCUPATION.MaxLength = 30;
                this.columnEDUCATION_DEGREE.AllowDBNull = false;
                this.columnNUMBER_OF_OFFSPRINGS.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRow NewPATIENTRow() {
                return ((PATIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PATIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PATIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PATIENTRowChanged != null)) {
                    this.PATIENTRowChanged(this, new PATIENTRowChangeEvent(((PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PATIENTRowChanging != null)) {
                    this.PATIENTRowChanging(this, new PATIENTRowChangeEvent(((PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PATIENTRowDeleted != null)) {
                    this.PATIENTRowDeleted(this, new PATIENTRowChangeEvent(((PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PATIENTRowDeleting != null)) {
                    this.PATIENTRowDeleting(this, new PATIENTRowChangeEvent(((PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovePATIENTRow(PATIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PATIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SECRETARYDataTable : global::System.Data.TypedTableBase<SECRETARYRow> {
            
            private global::System.Data.DataColumn columnPERSONNEL_ID_SECRETARY;
            
            private global::System.Data.DataColumn columnNAME_SECRETARY;
            
            private global::System.Data.DataColumn columnFAMILY_NAME_SECRETARY;
            
            private global::System.Data.DataColumn columnCONTACT_NUMBER_SECRETARY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYDataTable() {
                this.TableName = "SECRETARY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SECRETARYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected SECRETARYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_ID_SECRETARYColumn {
                get {
                    return this.columnPERSONNEL_ID_SECRETARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAME_SECRETARYColumn {
                get {
                    return this.columnNAME_SECRETARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FAMILY_NAME_SECRETARYColumn {
                get {
                    return this.columnFAMILY_NAME_SECRETARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CONTACT_NUMBER_SECRETARYColumn {
                get {
                    return this.columnCONTACT_NUMBER_SECRETARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow this[int index] {
                get {
                    return ((SECRETARYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SECRETARYRowChangeEventHandler SECRETARYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SECRETARYRowChangeEventHandler SECRETARYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SECRETARYRowChangeEventHandler SECRETARYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SECRETARYRowChangeEventHandler SECRETARYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddSECRETARYRow(SECRETARYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow AddSECRETARYRow(int PERSONNEL_ID_SECRETARY, string NAME_SECRETARY, string FAMILY_NAME_SECRETARY, string CONTACT_NUMBER_SECRETARY) {
                SECRETARYRow rowSECRETARYRow = ((SECRETARYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PERSONNEL_ID_SECRETARY,
                        NAME_SECRETARY,
                        FAMILY_NAME_SECRETARY,
                        CONTACT_NUMBER_SECRETARY};
                rowSECRETARYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSECRETARYRow);
                return rowSECRETARYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow FindByPERSONNEL_ID_SECRETARY(int PERSONNEL_ID_SECRETARY) {
                return ((SECRETARYRow)(this.Rows.Find(new object[] {
                            PERSONNEL_ID_SECRETARY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SECRETARYDataTable cln = ((SECRETARYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SECRETARYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnPERSONNEL_ID_SECRETARY = base.Columns["PERSONNEL_ID_SECRETARY"];
                this.columnNAME_SECRETARY = base.Columns["NAME_SECRETARY"];
                this.columnFAMILY_NAME_SECRETARY = base.Columns["FAMILY_NAME_SECRETARY"];
                this.columnCONTACT_NUMBER_SECRETARY = base.Columns["CONTACT_NUMBER_SECRETARY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnPERSONNEL_ID_SECRETARY = new global::System.Data.DataColumn("PERSONNEL_ID_SECRETARY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_ID_SECRETARY);
                this.columnNAME_SECRETARY = new global::System.Data.DataColumn("NAME_SECRETARY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_SECRETARY);
                this.columnFAMILY_NAME_SECRETARY = new global::System.Data.DataColumn("FAMILY_NAME_SECRETARY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAMILY_NAME_SECRETARY);
                this.columnCONTACT_NUMBER_SECRETARY = new global::System.Data.DataColumn("CONTACT_NUMBER_SECRETARY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTACT_NUMBER_SECRETARY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPERSONNEL_ID_SECRETARY}, true));
                this.columnPERSONNEL_ID_SECRETARY.AllowDBNull = false;
                this.columnPERSONNEL_ID_SECRETARY.Unique = true;
                this.columnNAME_SECRETARY.AllowDBNull = false;
                this.columnNAME_SECRETARY.MaxLength = 30;
                this.columnFAMILY_NAME_SECRETARY.AllowDBNull = false;
                this.columnFAMILY_NAME_SECRETARY.MaxLength = 30;
                this.columnCONTACT_NUMBER_SECRETARY.AllowDBNull = false;
                this.columnCONTACT_NUMBER_SECRETARY.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow NewSECRETARYRow() {
                return ((SECRETARYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SECRETARYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SECRETARYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SECRETARYRowChanged != null)) {
                    this.SECRETARYRowChanged(this, new SECRETARYRowChangeEvent(((SECRETARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SECRETARYRowChanging != null)) {
                    this.SECRETARYRowChanging(this, new SECRETARYRowChangeEvent(((SECRETARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SECRETARYRowDeleted != null)) {
                    this.SECRETARYRowDeleted(this, new SECRETARYRowChangeEvent(((SECRETARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SECRETARYRowDeleting != null)) {
                    this.SECRETARYRowDeleting(this, new SECRETARYRowChangeEvent(((SECRETARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveSECRETARYRow(SECRETARYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                clinicDatabasaeDataSet ds = new clinicDatabasaeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SECRETARYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CLOCKING_INRow : global::System.Data.DataRow {
            
            private CLOCKING_INDataTable tableCLOCKING_IN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CLOCKING_INRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCLOCKING_IN = ((CLOCKING_INDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LOGIN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableCLOCKING_IN.LOGIN_DATEColumn]));
                }
                set {
                    this[this.tableCLOCKING_IN.LOGIN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan LOGIN_TIME {
                get {
                    return ((global::System.TimeSpan)(this[this.tableCLOCKING_IN.LOGIN_TIMEColumn]));
                }
                set {
                    this[this.tableCLOCKING_IN.LOGIN_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PERSONNEL_ID_SECRETARY {
                get {
                    return ((int)(this[this.tableCLOCKING_IN.PERSONNEL_ID_SECRETARYColumn]));
                }
                set {
                    this[this.tableCLOCKING_IN.PERSONNEL_ID_SECRETARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan LOGOUT_TIME {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableCLOCKING_IN.LOGOUT_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOGOUT_TIME\' in table \'CLOCKING_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLOCKING_IN.LOGOUT_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LEAVE_OF_ABSENCE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCLOCKING_IN.LEAVE_OF_ABSENCE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEAVE_OF_ABSENCE_DATE\' in table \'CLOCKING_IN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLOCKING_IN.LEAVE_OF_ABSENCE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow SECRETARYRow {
                get {
                    return ((SECRETARYRow)(this.GetParentRow(this.Table.ParentRelations["FK_CLOCKING_REGISTERI_SECRETAR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CLOCKING_REGISTERI_SECRETAR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLOGOUT_TIMENull() {
                return this.IsNull(this.tableCLOCKING_IN.LOGOUT_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLOGOUT_TIMENull() {
                this[this.tableCLOCKING_IN.LOGOUT_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLEAVE_OF_ABSENCE_DATENull() {
                return this.IsNull(this.tableCLOCKING_IN.LEAVE_OF_ABSENCE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLEAVE_OF_ABSENCE_DATENull() {
                this[this.tableCLOCKING_IN.LEAVE_OF_ABSENCE_DATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class COUNSELLINGRow : global::System.Data.DataRow {
            
            private COUNSELLINGDataTable tableCOUNSELLING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal COUNSELLINGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCOUNSELLING = ((COUNSELLINGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATE_COUNSELLING {
                get {
                    return ((global::System.DateTime)(this[this.tableCOUNSELLING.DATE_COUNSELLINGColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.DATE_COUNSELLINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PERSONNEL_ID_SECRETARY {
                get {
                    return ((int)(this[this.tableCOUNSELLING.PERSONNEL_ID_SECRETARYColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.PERSONNEL_ID_SECRETARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PERSONNEL_ID_DOCTOR {
                get {
                    return ((int)(this[this.tableCOUNSELLING.PERSONNEL_ID_DOCTORColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.PERSONNEL_ID_DOCTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PATIENT_ID {
                get {
                    return ((int)(this[this.tableCOUNSELLING.PATIENT_IDColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.PATIENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.TimeSpan TIME_COUNSELLING {
                get {
                    return ((global::System.TimeSpan)(this[this.tableCOUNSELLING.TIME_COUNSELLINGColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.TIME_COUNSELLINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DURATION_COUNSELLING {
                get {
                    return ((int)(this[this.tableCOUNSELLING.DURATION_COUNSELLINGColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.DURATION_COUNSELLINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int NUMBER_OF_SESSIONS {
                get {
                    return ((int)(this[this.tableCOUNSELLING.NUMBER_OF_SESSIONSColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.NUMBER_OF_SESSIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PRICE_PAID {
                get {
                    return ((int)(this[this.tableCOUNSELLING.PRICE_PAIDColumn]));
                }
                set {
                    this[this.tableCOUNSELLING.PRICE_PAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MEDICATION {
                get {
                    try {
                        return ((string)(this[this.tableCOUNSELLING.MEDICATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEDICATION\' in table \'COUNSELLING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCOUNSELLING.MEDICATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRow DOCTORRow {
                get {
                    return ((DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK_COUNSELL_FORMING_DOCTOR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_COUNSELL_FORMING_DOCTOR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRow PATIENTRow {
                get {
                    return ((PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["FK_COUNSELL_PARTICIPA_PATIENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_COUNSELL_PARTICIPA_PATIENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow SECRETARYRow {
                get {
                    return ((SECRETARYRow)(this.GetParentRow(this.Table.ParentRelations["FK_COUNSELL_REGISTERI_SECRETAR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_COUNSELL_REGISTERI_SECRETAR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMEDICATIONNull() {
                return this.IsNull(this.tableCOUNSELLING.MEDICATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMEDICATIONNull() {
                this[this.tableCOUNSELLING.MEDICATIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DOCTORRow : global::System.Data.DataRow {
            
            private DOCTORDataTable tableDOCTOR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal DOCTORRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDOCTOR = ((DOCTORDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PERSONNEL_ID_DOCTOR {
                get {
                    return ((int)(this[this.tableDOCTOR.PERSONNEL_ID_DOCTORColumn]));
                }
                set {
                    this[this.tableDOCTOR.PERSONNEL_ID_DOCTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME_DOCTOR {
                get {
                    return ((string)(this[this.tableDOCTOR.NAME_DOCTORColumn]));
                }
                set {
                    this[this.tableDOCTOR.NAME_DOCTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FAMILY_NAME_DOCTOR {
                get {
                    return ((string)(this[this.tableDOCTOR.FAMILY_NAME_DOCTORColumn]));
                }
                set {
                    this[this.tableDOCTOR.FAMILY_NAME_DOCTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CONTACT_NUMBER_DOCTOR {
                get {
                    return ((string)(this[this.tableDOCTOR.CONTACT_NUMBER_DOCTORColumn]));
                }
                set {
                    this[this.tableDOCTOR.CONTACT_NUMBER_DOCTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow[] GetCOUNSELLINGRows() {
                if ((this.Table.ChildRelations["FK_COUNSELL_FORMING_DOCTOR"] == null)) {
                    return new COUNSELLINGRow[0];
                }
                else {
                    return ((COUNSELLINGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_COUNSELL_FORMING_DOCTOR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSRow[] GetORDERSRows() {
                if ((this.Table.ChildRelations["FK_ORDERS_REQUESTIN_DOCTOR"] == null)) {
                    return new ORDERSRow[0];
                }
                else {
                    return ((ORDERSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ORDERS_REQUESTIN_DOCTOR"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EXPENDITURERow : global::System.Data.DataRow {
            
            private EXPENDITUREDataTable tableEXPENDITURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EXPENDITURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXPENDITURE = ((EXPENDITUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int RECIPT_ID {
                get {
                    return ((int)(this[this.tableEXPENDITURE.RECIPT_IDColumn]));
                }
                set {
                    this[this.tableEXPENDITURE.RECIPT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PERSONNEL_ID_SECRETARY {
                get {
                    return ((int)(this[this.tableEXPENDITURE.PERSONNEL_ID_SECRETARYColumn]));
                }
                set {
                    this[this.tableEXPENDITURE.PERSONNEL_ID_SECRETARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PRICE_EXPENDITURE {
                get {
                    return ((int)(this[this.tableEXPENDITURE.PRICE_EXPENDITUREColumn]));
                }
                set {
                    this[this.tableEXPENDITURE.PRICE_EXPENDITUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EXPENDITURE_TYPE {
                get {
                    return ((string)(this[this.tableEXPENDITURE.EXPENDITURE_TYPEColumn]));
                }
                set {
                    this[this.tableEXPENDITURE.EXPENDITURE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EXPENDITURE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEXPENDITURE.EXPENDITURE_DATEColumn]));
                }
                set {
                    this[this.tableEXPENDITURE.EXPENDITURE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow SECRETARYRow {
                get {
                    return ((SECRETARYRow)(this.GetParentRow(this.Table.ParentRelations["FK_EXPENDIT_REGISTERI_SECRETAR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EXPENDIT_REGISTERI_SECRETAR"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MEDICAL_HISTORYRow : global::System.Data.DataRow {
            
            private MEDICAL_HISTORYDataTable tableMEDICAL_HISTORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal MEDICAL_HISTORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMEDICAL_HISTORY = ((MEDICAL_HISTORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PATIENT_ID {
                get {
                    return ((int)(this[this.tableMEDICAL_HISTORY.PATIENT_IDColumn]));
                }
                set {
                    this[this.tableMEDICAL_HISTORY.PATIENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATE_MEDICAL_HISTORY {
                get {
                    return ((global::System.DateTime)(this[this.tableMEDICAL_HISTORY.DATE_MEDICAL_HISTORYColumn]));
                }
                set {
                    this[this.tableMEDICAL_HISTORY.DATE_MEDICAL_HISTORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MEDICAL_CONDITION {
                get {
                    return ((string)(this[this.tableMEDICAL_HISTORY.MEDICAL_CONDITIONColumn]));
                }
                set {
                    this[this.tableMEDICAL_HISTORY.MEDICAL_CONDITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PRESCRIBED_MEDICATION {
                get {
                    return ((string)(this[this.tableMEDICAL_HISTORY.PRESCRIBED_MEDICATIONColumn]));
                }
                set {
                    this[this.tableMEDICAL_HISTORY.PRESCRIBED_MEDICATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRow PATIENTRow {
                get {
                    return ((PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["FK_MEDICAL__HAS_PATIENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MEDICAL__HAS_PATIENT"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ORDERSRow : global::System.Data.DataRow {
            
            private ORDERSDataTable tableORDERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ORDERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableORDERS = ((ORDERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ORDER_ID {
                get {
                    return ((int)(this[this.tableORDERS.ORDER_IDColumn]));
                }
                set {
                    this[this.tableORDERS.ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PERSONNEL_ID_DOCTOR {
                get {
                    return ((int)(this[this.tableORDERS.PERSONNEL_ID_DOCTORColumn]));
                }
                set {
                    this[this.tableORDERS.PERSONNEL_ID_DOCTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PRODUCT_NAME {
                get {
                    return ((string)(this[this.tableORDERS.PRODUCT_NAMEColumn]));
                }
                set {
                    this[this.tableORDERS.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PRODUCT_TYPE {
                get {
                    return ((int)(this[this.tableORDERS.PRODUCT_TYPEColumn]));
                }
                set {
                    this[this.tableORDERS.PRODUCT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PRODUCT_NUMBER {
                get {
                    return ((int)(this[this.tableORDERS.PRODUCT_NUMBERColumn]));
                }
                set {
                    this[this.tableORDERS.PRODUCT_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ORDER_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableORDERS.ORDER_DATEColumn]));
                }
                set {
                    this[this.tableORDERS.ORDER_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PRICE_ORDER {
                get {
                    try {
                        return ((int)(this[this.tableORDERS.PRICE_ORDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRICE_ORDER\' in table \'ORDERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORDERS.PRICE_ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRow DOCTORRow {
                get {
                    return ((DOCTORRow)(this.GetParentRow(this.Table.ParentRelations["FK_ORDERS_REQUESTIN_DOCTOR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ORDERS_REQUESTIN_DOCTOR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPRICE_ORDERNull() {
                return this.IsNull(this.tableORDERS.PRICE_ORDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPRICE_ORDERNull() {
                this[this.tableORDERS.PRICE_ORDERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PATIENTRow : global::System.Data.DataRow {
            
            private PATIENTDataTable tablePATIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal PATIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePATIENT = ((PATIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PATIENT_ID {
                get {
                    return ((int)(this[this.tablePATIENT.PATIENT_IDColumn]));
                }
                set {
                    this[this.tablePATIENT.PATIENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME_PATIENT {
                get {
                    return ((string)(this[this.tablePATIENT.NAME_PATIENTColumn]));
                }
                set {
                    this[this.tablePATIENT.NAME_PATIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FAMILY_NAME_PATIENT {
                get {
                    return ((string)(this[this.tablePATIENT.FAMILY_NAME_PATIENTColumn]));
                }
                set {
                    this[this.tablePATIENT.FAMILY_NAME_PATIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CONTACT_NUMBER_PATIENT {
                get {
                    return ((string)(this[this.tablePATIENT.CONTACT_NUMBER_PATIENTColumn]));
                }
                set {
                    this[this.tablePATIENT.CONTACT_NUMBER_PATIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime VISIT_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tablePATIENT.VISIT_DATEColumn]));
                }
                set {
                    this[this.tablePATIENT.VISIT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int LINE_NUMBER {
                get {
                    return ((int)(this[this.tablePATIENT.LINE_NUMBERColumn]));
                }
                set {
                    this[this.tablePATIENT.LINE_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string REFERRAL {
                get {
                    try {
                        return ((string)(this[this.tablePATIENT.REFERRALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFERRAL\' in table \'PATIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePATIENT.REFERRALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int NATIONAL_ID {
                get {
                    return ((int)(this[this.tablePATIENT.NATIONAL_IDColumn]));
                }
                set {
                    this[this.tablePATIENT.NATIONAL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int BIRTH_CERTIFICATE_NUMBER {
                get {
                    return ((int)(this[this.tablePATIENT.BIRTH_CERTIFICATE_NUMBERColumn]));
                }
                set {
                    this[this.tablePATIENT.BIRTH_CERTIFICATE_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ADDRESS {
                get {
                    return ((string)(this[this.tablePATIENT.ADDRESSColumn]));
                }
                set {
                    this[this.tablePATIENT.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AGE {
                get {
                    return ((int)(this[this.tablePATIENT.AGEColumn]));
                }
                set {
                    this[this.tablePATIENT.AGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int GENDER {
                get {
                    return ((int)(this[this.tablePATIENT.GENDERColumn]));
                }
                set {
                    this[this.tablePATIENT.GENDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int INSURANCE_ID {
                get {
                    try {
                        return ((int)(this[this.tablePATIENT.INSURANCE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSURANCE_ID\' in table \'PATIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePATIENT.INSURANCE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OCCUPATION {
                get {
                    return ((string)(this[this.tablePATIENT.OCCUPATIONColumn]));
                }
                set {
                    this[this.tablePATIENT.OCCUPATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int EDUCATION_DEGREE {
                get {
                    return ((int)(this[this.tablePATIENT.EDUCATION_DEGREEColumn]));
                }
                set {
                    this[this.tablePATIENT.EDUCATION_DEGREEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int NUMBER_OF_OFFSPRINGS {
                get {
                    return ((int)(this[this.tablePATIENT.NUMBER_OF_OFFSPRINGSColumn]));
                }
                set {
                    this[this.tablePATIENT.NUMBER_OF_OFFSPRINGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsREFERRALNull() {
                return this.IsNull(this.tablePATIENT.REFERRALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetREFERRALNull() {
                this[this.tablePATIENT.REFERRALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsINSURANCE_IDNull() {
                return this.IsNull(this.tablePATIENT.INSURANCE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetINSURANCE_IDNull() {
                this[this.tablePATIENT.INSURANCE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow[] GetCOUNSELLINGRows() {
                if ((this.Table.ChildRelations["FK_COUNSELL_PARTICIPA_PATIENT"] == null)) {
                    return new COUNSELLINGRow[0];
                }
                else {
                    return ((COUNSELLINGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_COUNSELL_PARTICIPA_PATIENT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYRow[] GetMEDICAL_HISTORYRows() {
                if ((this.Table.ChildRelations["FK_MEDICAL__HAS_PATIENT"] == null)) {
                    return new MEDICAL_HISTORYRow[0];
                }
                else {
                    return ((MEDICAL_HISTORYRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MEDICAL__HAS_PATIENT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SECRETARYRow : global::System.Data.DataRow {
            
            private SECRETARYDataTable tableSECRETARY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SECRETARYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSECRETARY = ((SECRETARYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PERSONNEL_ID_SECRETARY {
                get {
                    return ((int)(this[this.tableSECRETARY.PERSONNEL_ID_SECRETARYColumn]));
                }
                set {
                    this[this.tableSECRETARY.PERSONNEL_ID_SECRETARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME_SECRETARY {
                get {
                    return ((string)(this[this.tableSECRETARY.NAME_SECRETARYColumn]));
                }
                set {
                    this[this.tableSECRETARY.NAME_SECRETARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FAMILY_NAME_SECRETARY {
                get {
                    return ((string)(this[this.tableSECRETARY.FAMILY_NAME_SECRETARYColumn]));
                }
                set {
                    this[this.tableSECRETARY.FAMILY_NAME_SECRETARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CONTACT_NUMBER_SECRETARY {
                get {
                    return ((string)(this[this.tableSECRETARY.CONTACT_NUMBER_SECRETARYColumn]));
                }
                set {
                    this[this.tableSECRETARY.CONTACT_NUMBER_SECRETARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INRow[] GetCLOCKING_INRows() {
                if ((this.Table.ChildRelations["FK_CLOCKING_REGISTERI_SECRETAR"] == null)) {
                    return new CLOCKING_INRow[0];
                }
                else {
                    return ((CLOCKING_INRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CLOCKING_REGISTERI_SECRETAR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow[] GetCOUNSELLINGRows() {
                if ((this.Table.ChildRelations["FK_COUNSELL_REGISTERI_SECRETAR"] == null)) {
                    return new COUNSELLINGRow[0];
                }
                else {
                    return ((COUNSELLINGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_COUNSELL_REGISTERI_SECRETAR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITURERow[] GetEXPENDITURERows() {
                if ((this.Table.ChildRelations["FK_EXPENDIT_REGISTERI_SECRETAR"] == null)) {
                    return new EXPENDITURERow[0];
                }
                else {
                    return ((EXPENDITURERow[])(base.GetChildRows(this.Table.ChildRelations["FK_EXPENDIT_REGISTERI_SECRETAR"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CLOCKING_INRowChangeEvent : global::System.EventArgs {
            
            private CLOCKING_INRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INRowChangeEvent(CLOCKING_INRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CLOCKING_INRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class COUNSELLINGRowChangeEvent : global::System.EventArgs {
            
            private COUNSELLINGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRowChangeEvent(COUNSELLINGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public COUNSELLINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class DOCTORRowChangeEvent : global::System.EventArgs {
            
            private DOCTORRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRowChangeEvent(DOCTORRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DOCTORRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class EXPENDITURERowChangeEvent : global::System.EventArgs {
            
            private EXPENDITURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITURERowChangeEvent(EXPENDITURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXPENDITURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class MEDICAL_HISTORYRowChangeEvent : global::System.EventArgs {
            
            private MEDICAL_HISTORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYRowChangeEvent(MEDICAL_HISTORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public MEDICAL_HISTORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ORDERSRowChangeEvent : global::System.EventArgs {
            
            private ORDERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSRowChangeEvent(ORDERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ORDERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class PATIENTRowChangeEvent : global::System.EventArgs {
            
            private PATIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRowChangeEvent(PATIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PATIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class SECRETARYRowChangeEvent : global::System.EventArgs {
            
            private SECRETARYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRowChangeEvent(SECRETARYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SECRETARYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Clinic_System.clinicDatabasaeDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CLOCKING_INTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public CLOCKING_INTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CLOCKING_IN";
            tableMapping.ColumnMappings.Add("LOGIN_DATE", "LOGIN_DATE");
            tableMapping.ColumnMappings.Add("LOGIN_TIME", "LOGIN_TIME");
            tableMapping.ColumnMappings.Add("PERSONNEL_ID_SECRETARY", "PERSONNEL_ID_SECRETARY");
            tableMapping.ColumnMappings.Add("LOGOUT_TIME", "LOGOUT_TIME");
            tableMapping.ColumnMappings.Add("LEAVE_OF_ABSENCE_DATE", "LEAVE_OF_ABSENCE_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CLOCKING_IN] WHERE (([LOGIN_DATE] = @Original_LOGIN_DATE) AND ([LOGIN_TIME] = @Original_LOGIN_TIME) AND ([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ((@IsNull_LOGOUT_TIME = 1 AND [LOGOUT_TIME] IS NULL) OR ([LOGOUT_TIME] = @Original_LOGOUT_TIME)) AND ((@IsNull_LEAVE_OF_ABSENCE_DATE = 1 AND [LEAVE_OF_ABSENCE_DATE] IS NULL) OR ([LEAVE_OF_ABSENCE_DATE] = @Original_LEAVE_OF_ABSENCE_DATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LOGOUT_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGOUT_TIME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGOUT_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGOUT_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LEAVE_OF_ABSENCE_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEAVE_OF_ABSENCE_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LEAVE_OF_ABSENCE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEAVE_OF_ABSENCE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CLOCKING_IN] ([LOGIN_DATE], [LOGIN_TIME], [PERSONNEL_ID_SECRETARY], [LOGOUT_TIME], [LEAVE_OF_ABSENCE_DATE]) VALUES (@LOGIN_DATE, @LOGIN_TIME, @PERSONNEL_ID_SECRETARY, @LOGOUT_TIME, @LEAVE_OF_ABSENCE_DATE);
SELECT LOGIN_DATE, LOGIN_TIME, PERSONNEL_ID_SECRETARY, LOGOUT_TIME, LEAVE_OF_ABSENCE_DATE FROM CLOCKING_IN WHERE (LOGIN_DATE = @LOGIN_DATE) AND (LOGIN_TIME = @LOGIN_TIME) AND (PERSONNEL_ID_SECRETARY = @PERSONNEL_ID_SECRETARY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGOUT_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGOUT_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LEAVE_OF_ABSENCE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEAVE_OF_ABSENCE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CLOCKING_IN] SET [LOGIN_DATE] = @LOGIN_DATE, [LOGIN_TIME] = @LOGIN_TIME, [PERSONNEL_ID_SECRETARY] = @PERSONNEL_ID_SECRETARY, [LOGOUT_TIME] = @LOGOUT_TIME, [LEAVE_OF_ABSENCE_DATE] = @LEAVE_OF_ABSENCE_DATE WHERE (([LOGIN_DATE] = @Original_LOGIN_DATE) AND ([LOGIN_TIME] = @Original_LOGIN_TIME) AND ([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ((@IsNull_LOGOUT_TIME = 1 AND [LOGOUT_TIME] IS NULL) OR ([LOGOUT_TIME] = @Original_LOGOUT_TIME)) AND ((@IsNull_LEAVE_OF_ABSENCE_DATE = 1 AND [LEAVE_OF_ABSENCE_DATE] IS NULL) OR ([LEAVE_OF_ABSENCE_DATE] = @Original_LEAVE_OF_ABSENCE_DATE)));
SELECT LOGIN_DATE, LOGIN_TIME, PERSONNEL_ID_SECRETARY, LOGOUT_TIME, LEAVE_OF_ABSENCE_DATE FROM CLOCKING_IN WHERE (LOGIN_DATE = @LOGIN_DATE) AND (LOGIN_TIME = @LOGIN_TIME) AND (PERSONNEL_ID_SECRETARY = @PERSONNEL_ID_SECRETARY)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGOUT_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGOUT_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LEAVE_OF_ABSENCE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEAVE_OF_ABSENCE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LOGOUT_TIME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGOUT_TIME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGOUT_TIME", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGOUT_TIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LEAVE_OF_ABSENCE_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEAVE_OF_ABSENCE_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LEAVE_OF_ABSENCE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEAVE_OF_ABSENCE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LOGIN_DATE, LOGIN_TIME, PERSONNEL_ID_SECRETARY, LOGOUT_TIME, LEAVE_OF_ABSE" +
                "NCE_DATE FROM dbo.CLOCKING_IN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.CLOCKING_INDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.CLOCKING_INDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.CLOCKING_INDataTable dataTable = new clinicDatabasaeDataSet.CLOCKING_INDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.CLOCKING_INDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CLOCKING_IN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_LOGIN_DATE, System.TimeSpan Original_LOGIN_TIME, int Original_PERSONNEL_ID_SECRETARY, global::System.Nullable<global::System.TimeSpan> Original_LOGOUT_TIME, global::System.Nullable<global::System.DateTime> Original_LEAVE_OF_ABSENCE_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_LOGIN_DATE));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.TimeSpan)(Original_LOGIN_TIME));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            if ((Original_LOGOUT_TIME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.TimeSpan)(Original_LOGOUT_TIME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_LEAVE_OF_ABSENCE_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_LEAVE_OF_ABSENCE_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime LOGIN_DATE, System.TimeSpan LOGIN_TIME, int PERSONNEL_ID_SECRETARY, global::System.Nullable<global::System.TimeSpan> LOGOUT_TIME, global::System.Nullable<global::System.DateTime> LEAVE_OF_ABSENCE_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(LOGIN_DATE));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.TimeSpan)(LOGIN_TIME));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(PERSONNEL_ID_SECRETARY));
            if ((LOGOUT_TIME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.TimeSpan)(LOGOUT_TIME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LEAVE_OF_ABSENCE_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(LEAVE_OF_ABSENCE_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime LOGIN_DATE, System.TimeSpan LOGIN_TIME, int PERSONNEL_ID_SECRETARY, global::System.Nullable<global::System.TimeSpan> LOGOUT_TIME, global::System.Nullable<global::System.DateTime> LEAVE_OF_ABSENCE_DATE, System.DateTime Original_LOGIN_DATE, System.TimeSpan Original_LOGIN_TIME, int Original_PERSONNEL_ID_SECRETARY, global::System.Nullable<global::System.TimeSpan> Original_LOGOUT_TIME, global::System.Nullable<global::System.DateTime> Original_LEAVE_OF_ABSENCE_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(LOGIN_DATE));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.TimeSpan)(LOGIN_TIME));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(PERSONNEL_ID_SECRETARY));
            if ((LOGOUT_TIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.TimeSpan)(LOGOUT_TIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LEAVE_OF_ABSENCE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(LEAVE_OF_ABSENCE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_LOGIN_DATE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.TimeSpan)(Original_LOGIN_TIME));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            if ((Original_LOGOUT_TIME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.TimeSpan)(Original_LOGOUT_TIME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_LEAVE_OF_ABSENCE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_LEAVE_OF_ABSENCE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.TimeSpan> LOGOUT_TIME, global::System.Nullable<global::System.DateTime> LEAVE_OF_ABSENCE_DATE, System.DateTime Original_LOGIN_DATE, System.TimeSpan Original_LOGIN_TIME, int Original_PERSONNEL_ID_SECRETARY, global::System.Nullable<global::System.TimeSpan> Original_LOGOUT_TIME, global::System.Nullable<global::System.DateTime> Original_LEAVE_OF_ABSENCE_DATE) {
            return this.Update(Original_LOGIN_DATE, Original_LOGIN_TIME, Original_PERSONNEL_ID_SECRETARY, LOGOUT_TIME, LEAVE_OF_ABSENCE_DATE, Original_LOGIN_DATE, Original_LOGIN_TIME, Original_PERSONNEL_ID_SECRETARY, Original_LOGOUT_TIME, Original_LEAVE_OF_ABSENCE_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class COUNSELLINGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public COUNSELLINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "COUNSELLING";
            tableMapping.ColumnMappings.Add("DATE_COUNSELLING", "DATE_COUNSELLING");
            tableMapping.ColumnMappings.Add("PERSONNEL_ID_SECRETARY", "PERSONNEL_ID_SECRETARY");
            tableMapping.ColumnMappings.Add("PERSONNEL_ID_DOCTOR", "PERSONNEL_ID_DOCTOR");
            tableMapping.ColumnMappings.Add("PATIENT_ID", "PATIENT_ID");
            tableMapping.ColumnMappings.Add("TIME_COUNSELLING", "TIME_COUNSELLING");
            tableMapping.ColumnMappings.Add("DURATION_COUNSELLING", "DURATION_COUNSELLING");
            tableMapping.ColumnMappings.Add("NUMBER_OF_SESSIONS", "NUMBER_OF_SESSIONS");
            tableMapping.ColumnMappings.Add("PRICE_PAID", "PRICE_PAID");
            tableMapping.ColumnMappings.Add("MEDICATION", "MEDICATION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[COUNSELLING] WHERE (([DATE_COUNSELLING] = @Original_DATE_COUNSELLING) AND ([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ([PERSONNEL_ID_DOCTOR] = @Original_PERSONNEL_ID_DOCTOR) AND ([PATIENT_ID] = @Original_PATIENT_ID) AND ([TIME_COUNSELLING] = @Original_TIME_COUNSELLING) AND ([DURATION_COUNSELLING] = @Original_DURATION_COUNSELLING) AND ([NUMBER_OF_SESSIONS] = @Original_NUMBER_OF_SESSIONS) AND ([PRICE_PAID] = @Original_PRICE_PAID) AND ((@IsNull_MEDICATION = 1 AND [MEDICATION] IS NULL) OR ([MEDICATION] = @Original_MEDICATION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_COUNSELLING", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_COUNSELLING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIME_COUNSELLING", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIME_COUNSELLING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DURATION_COUNSELLING", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DURATION_COUNSELLING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUMBER_OF_SESSIONS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_SESSIONS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICE_PAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_PAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEDICATION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICATION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[COUNSELLING] ([DATE_COUNSELLING], [PERSONNEL_ID_SECRETARY], [PERSONNEL_ID_DOCTOR], [PATIENT_ID], [TIME_COUNSELLING], [DURATION_COUNSELLING], [NUMBER_OF_SESSIONS], [PRICE_PAID], [MEDICATION]) VALUES (@DATE_COUNSELLING, @PERSONNEL_ID_SECRETARY, @PERSONNEL_ID_DOCTOR, @PATIENT_ID, @TIME_COUNSELLING, @DURATION_COUNSELLING, @NUMBER_OF_SESSIONS, @PRICE_PAID, @MEDICATION);
SELECT DATE_COUNSELLING, PERSONNEL_ID_SECRETARY, PERSONNEL_ID_DOCTOR, PATIENT_ID, TIME_COUNSELLING, DURATION_COUNSELLING, NUMBER_OF_SESSIONS, PRICE_PAID, MEDICATION FROM COUNSELLING WHERE (DATE_COUNSELLING = @DATE_COUNSELLING) AND (PATIENT_ID = @PATIENT_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_COUNSELLING", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_COUNSELLING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIME_COUNSELLING", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIME_COUNSELLING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DURATION_COUNSELLING", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DURATION_COUNSELLING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUMBER_OF_SESSIONS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_SESSIONS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE_PAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_PAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[COUNSELLING] SET [DATE_COUNSELLING] = @DATE_COUNSELLING, [PERSONNEL_ID_SECRETARY] = @PERSONNEL_ID_SECRETARY, [PERSONNEL_ID_DOCTOR] = @PERSONNEL_ID_DOCTOR, [PATIENT_ID] = @PATIENT_ID, [TIME_COUNSELLING] = @TIME_COUNSELLING, [DURATION_COUNSELLING] = @DURATION_COUNSELLING, [NUMBER_OF_SESSIONS] = @NUMBER_OF_SESSIONS, [PRICE_PAID] = @PRICE_PAID, [MEDICATION] = @MEDICATION WHERE (([DATE_COUNSELLING] = @Original_DATE_COUNSELLING) AND ([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ([PERSONNEL_ID_DOCTOR] = @Original_PERSONNEL_ID_DOCTOR) AND ([PATIENT_ID] = @Original_PATIENT_ID) AND ([TIME_COUNSELLING] = @Original_TIME_COUNSELLING) AND ([DURATION_COUNSELLING] = @Original_DURATION_COUNSELLING) AND ([NUMBER_OF_SESSIONS] = @Original_NUMBER_OF_SESSIONS) AND ([PRICE_PAID] = @Original_PRICE_PAID) AND ((@IsNull_MEDICATION = 1 AND [MEDICATION] IS NULL) OR ([MEDICATION] = @Original_MEDICATION)));
SELECT DATE_COUNSELLING, PERSONNEL_ID_SECRETARY, PERSONNEL_ID_DOCTOR, PATIENT_ID, TIME_COUNSELLING, DURATION_COUNSELLING, NUMBER_OF_SESSIONS, PRICE_PAID, MEDICATION FROM COUNSELLING WHERE (DATE_COUNSELLING = @DATE_COUNSELLING) AND (PATIENT_ID = @PATIENT_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_COUNSELLING", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_COUNSELLING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIME_COUNSELLING", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIME_COUNSELLING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DURATION_COUNSELLING", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DURATION_COUNSELLING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUMBER_OF_SESSIONS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_SESSIONS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE_PAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_PAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_COUNSELLING", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_COUNSELLING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIME_COUNSELLING", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIME_COUNSELLING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DURATION_COUNSELLING", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DURATION_COUNSELLING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUMBER_OF_SESSIONS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_SESSIONS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICE_PAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_PAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEDICATION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICATION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DATE_COUNSELLING, PERSONNEL_ID_SECRETARY, PERSONNEL_ID_DOCTOR, PATIENT_ID," +
                " TIME_COUNSELLING, DURATION_COUNSELLING, NUMBER_OF_SESSIONS, PRICE_PAID, MEDICAT" +
                "ION FROM dbo.COUNSELLING";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.COUNSELLINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.COUNSELLINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.COUNSELLINGDataTable dataTable = new clinicDatabasaeDataSet.COUNSELLINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.COUNSELLINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "COUNSELLING");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_DATE_COUNSELLING, int Original_PERSONNEL_ID_SECRETARY, int Original_PERSONNEL_ID_DOCTOR, int Original_PATIENT_ID, System.TimeSpan Original_TIME_COUNSELLING, int Original_DURATION_COUNSELLING, int Original_NUMBER_OF_SESSIONS, int Original_PRICE_PAID, string Original_MEDICATION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_DATE_COUNSELLING));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_PERSONNEL_ID_DOCTOR));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_PATIENT_ID));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.TimeSpan)(Original_TIME_COUNSELLING));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_DURATION_COUNSELLING));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_NUMBER_OF_SESSIONS));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_PRICE_PAID));
            if ((Original_MEDICATION == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime DATE_COUNSELLING, int PERSONNEL_ID_SECRETARY, int PERSONNEL_ID_DOCTOR, int PATIENT_ID, System.TimeSpan TIME_COUNSELLING, int DURATION_COUNSELLING, int NUMBER_OF_SESSIONS, int PRICE_PAID, string MEDICATION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DATE_COUNSELLING));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PERSONNEL_ID_SECRETARY));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(PERSONNEL_ID_DOCTOR));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PATIENT_ID));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.TimeSpan)(TIME_COUNSELLING));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(DURATION_COUNSELLING));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(NUMBER_OF_SESSIONS));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(PRICE_PAID));
            if ((MEDICATION == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime DATE_COUNSELLING, 
                    int PERSONNEL_ID_SECRETARY, 
                    int PERSONNEL_ID_DOCTOR, 
                    int PATIENT_ID, 
                    System.TimeSpan TIME_COUNSELLING, 
                    int DURATION_COUNSELLING, 
                    int NUMBER_OF_SESSIONS, 
                    int PRICE_PAID, 
                    string MEDICATION, 
                    System.DateTime Original_DATE_COUNSELLING, 
                    int Original_PERSONNEL_ID_SECRETARY, 
                    int Original_PERSONNEL_ID_DOCTOR, 
                    int Original_PATIENT_ID, 
                    System.TimeSpan Original_TIME_COUNSELLING, 
                    int Original_DURATION_COUNSELLING, 
                    int Original_NUMBER_OF_SESSIONS, 
                    int Original_PRICE_PAID, 
                    string Original_MEDICATION) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(DATE_COUNSELLING));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(PERSONNEL_ID_SECRETARY));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(PERSONNEL_ID_DOCTOR));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PATIENT_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.TimeSpan)(TIME_COUNSELLING));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DURATION_COUNSELLING));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(NUMBER_OF_SESSIONS));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(PRICE_PAID));
            if ((MEDICATION == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MEDICATION));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_DATE_COUNSELLING));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_PERSONNEL_ID_DOCTOR));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_PATIENT_ID));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.TimeSpan)(Original_TIME_COUNSELLING));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_DURATION_COUNSELLING));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_NUMBER_OF_SESSIONS));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_PRICE_PAID));
            if ((Original_MEDICATION == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int PERSONNEL_ID_SECRETARY, 
                    int PERSONNEL_ID_DOCTOR, 
                    System.TimeSpan TIME_COUNSELLING, 
                    int DURATION_COUNSELLING, 
                    int NUMBER_OF_SESSIONS, 
                    int PRICE_PAID, 
                    string MEDICATION, 
                    System.DateTime Original_DATE_COUNSELLING, 
                    int Original_PERSONNEL_ID_SECRETARY, 
                    int Original_PERSONNEL_ID_DOCTOR, 
                    int Original_PATIENT_ID, 
                    System.TimeSpan Original_TIME_COUNSELLING, 
                    int Original_DURATION_COUNSELLING, 
                    int Original_NUMBER_OF_SESSIONS, 
                    int Original_PRICE_PAID, 
                    string Original_MEDICATION) {
            return this.Update(Original_DATE_COUNSELLING, PERSONNEL_ID_SECRETARY, PERSONNEL_ID_DOCTOR, Original_PATIENT_ID, TIME_COUNSELLING, DURATION_COUNSELLING, NUMBER_OF_SESSIONS, PRICE_PAID, MEDICATION, Original_DATE_COUNSELLING, Original_PERSONNEL_ID_SECRETARY, Original_PERSONNEL_ID_DOCTOR, Original_PATIENT_ID, Original_TIME_COUNSELLING, Original_DURATION_COUNSELLING, Original_NUMBER_OF_SESSIONS, Original_PRICE_PAID, Original_MEDICATION);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DOCTORTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DOCTORTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DOCTOR";
            tableMapping.ColumnMappings.Add("PERSONNEL_ID_DOCTOR", "PERSONNEL_ID_DOCTOR");
            tableMapping.ColumnMappings.Add("NAME_DOCTOR", "NAME_DOCTOR");
            tableMapping.ColumnMappings.Add("FAMILY_NAME_DOCTOR", "FAMILY_NAME_DOCTOR");
            tableMapping.ColumnMappings.Add("CONTACT_NUMBER_DOCTOR", "CONTACT_NUMBER_DOCTOR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DOCTOR] WHERE (([PERSONNEL_ID_DOCTOR] = @Original_PERSONNEL_ID_DOCTOR) AND ([NAME_DOCTOR] = @Original_NAME_DOCTOR) AND ([FAMILY_NAME_DOCTOR] = @Original_FAMILY_NAME_DOCTOR) AND ([CONTACT_NUMBER_DOCTOR] = @Original_CONTACT_NUMBER_DOCTOR))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMILY_NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTACT_NUMBER_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DOCTOR] ([PERSONNEL_ID_DOCTOR], [NAME_DOCTOR], [FAMILY_NAME_DOCTOR], [CONTACT_NUMBER_DOCTOR]) VALUES (@PERSONNEL_ID_DOCTOR, @NAME_DOCTOR, @FAMILY_NAME_DOCTOR, @CONTACT_NUMBER_DOCTOR);
SELECT PERSONNEL_ID_DOCTOR, NAME_DOCTOR, FAMILY_NAME_DOCTOR, CONTACT_NUMBER_DOCTOR FROM DOCTOR WHERE (PERSONNEL_ID_DOCTOR = @PERSONNEL_ID_DOCTOR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMILY_NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTACT_NUMBER_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DOCTOR] SET [PERSONNEL_ID_DOCTOR] = @PERSONNEL_ID_DOCTOR, [NAME_DOCTOR] = @NAME_DOCTOR, [FAMILY_NAME_DOCTOR] = @FAMILY_NAME_DOCTOR, [CONTACT_NUMBER_DOCTOR] = @CONTACT_NUMBER_DOCTOR WHERE (([PERSONNEL_ID_DOCTOR] = @Original_PERSONNEL_ID_DOCTOR) AND ([NAME_DOCTOR] = @Original_NAME_DOCTOR) AND ([FAMILY_NAME_DOCTOR] = @Original_FAMILY_NAME_DOCTOR) AND ([CONTACT_NUMBER_DOCTOR] = @Original_CONTACT_NUMBER_DOCTOR));
SELECT PERSONNEL_ID_DOCTOR, NAME_DOCTOR, FAMILY_NAME_DOCTOR, CONTACT_NUMBER_DOCTOR FROM DOCTOR WHERE (PERSONNEL_ID_DOCTOR = @PERSONNEL_ID_DOCTOR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMILY_NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTACT_NUMBER_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMILY_NAME_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTACT_NUMBER_DOCTOR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PERSONNEL_ID_DOCTOR, NAME_DOCTOR, FAMILY_NAME_DOCTOR, CONTACT_NUMBER_DOCTO" +
                "R FROM dbo.DOCTOR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.DOCTORDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.DOCTORDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.DOCTORDataTable dataTable = new clinicDatabasaeDataSet.DOCTORDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.DOCTORDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DOCTOR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PERSONNEL_ID_DOCTOR, string Original_NAME_DOCTOR, string Original_FAMILY_NAME_DOCTOR, string Original_CONTACT_NUMBER_DOCTOR) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PERSONNEL_ID_DOCTOR));
            if ((Original_NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_DOCTOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_DOCTOR));
            }
            if ((Original_FAMILY_NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("Original_FAMILY_NAME_DOCTOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FAMILY_NAME_DOCTOR));
            }
            if ((Original_CONTACT_NUMBER_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("Original_CONTACT_NUMBER_DOCTOR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CONTACT_NUMBER_DOCTOR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int PERSONNEL_ID_DOCTOR, string NAME_DOCTOR, string FAMILY_NAME_DOCTOR, string CONTACT_NUMBER_DOCTOR) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PERSONNEL_ID_DOCTOR));
            if ((NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("NAME_DOCTOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME_DOCTOR));
            }
            if ((FAMILY_NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("FAMILY_NAME_DOCTOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FAMILY_NAME_DOCTOR));
            }
            if ((CONTACT_NUMBER_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("CONTACT_NUMBER_DOCTOR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CONTACT_NUMBER_DOCTOR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int PERSONNEL_ID_DOCTOR, string NAME_DOCTOR, string FAMILY_NAME_DOCTOR, string CONTACT_NUMBER_DOCTOR, int Original_PERSONNEL_ID_DOCTOR, string Original_NAME_DOCTOR, string Original_FAMILY_NAME_DOCTOR, string Original_CONTACT_NUMBER_DOCTOR) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PERSONNEL_ID_DOCTOR));
            if ((NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("NAME_DOCTOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_DOCTOR));
            }
            if ((FAMILY_NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("FAMILY_NAME_DOCTOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FAMILY_NAME_DOCTOR));
            }
            if ((CONTACT_NUMBER_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("CONTACT_NUMBER_DOCTOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CONTACT_NUMBER_DOCTOR));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_PERSONNEL_ID_DOCTOR));
            if ((Original_NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_DOCTOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NAME_DOCTOR));
            }
            if ((Original_FAMILY_NAME_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("Original_FAMILY_NAME_DOCTOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_FAMILY_NAME_DOCTOR));
            }
            if ((Original_CONTACT_NUMBER_DOCTOR == null)) {
                throw new global::System.ArgumentNullException("Original_CONTACT_NUMBER_DOCTOR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_CONTACT_NUMBER_DOCTOR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_DOCTOR, string FAMILY_NAME_DOCTOR, string CONTACT_NUMBER_DOCTOR, int Original_PERSONNEL_ID_DOCTOR, string Original_NAME_DOCTOR, string Original_FAMILY_NAME_DOCTOR, string Original_CONTACT_NUMBER_DOCTOR) {
            return this.Update(Original_PERSONNEL_ID_DOCTOR, NAME_DOCTOR, FAMILY_NAME_DOCTOR, CONTACT_NUMBER_DOCTOR, Original_PERSONNEL_ID_DOCTOR, Original_NAME_DOCTOR, Original_FAMILY_NAME_DOCTOR, Original_CONTACT_NUMBER_DOCTOR);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXPENDITURETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public EXPENDITURETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXPENDITURE";
            tableMapping.ColumnMappings.Add("RECIPT_ID", "RECIPT_ID");
            tableMapping.ColumnMappings.Add("PERSONNEL_ID_SECRETARY", "PERSONNEL_ID_SECRETARY");
            tableMapping.ColumnMappings.Add("PRICE_EXPENDITURE", "PRICE_EXPENDITURE");
            tableMapping.ColumnMappings.Add("EXPENDITURE_TYPE", "EXPENDITURE_TYPE");
            tableMapping.ColumnMappings.Add("EXPENDITURE_DATE", "EXPENDITURE_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[EXPENDITURE] WHERE (([RECIPT_ID] = @Original_RECIPT_ID) AND ([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ([PRICE_EXPENDITURE] = @Original_PRICE_EXPENDITURE) AND ([EXPENDITURE_TYPE] = @Original_EXPENDITURE_TYPE) AND ([EXPENDITURE_DATE] = @Original_EXPENDITURE_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECIPT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECIPT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICE_EXPENDITURE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_EXPENDITURE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPENDITURE_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPENDITURE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EXPENDITURE] ([RECIPT_ID], [PERSONNEL_ID_SECRETARY], [PRICE_EXPENDITURE], [EXPENDITURE_TYPE], [EXPENDITURE_DATE]) VALUES (@RECIPT_ID, @PERSONNEL_ID_SECRETARY, @PRICE_EXPENDITURE, @EXPENDITURE_TYPE, @EXPENDITURE_DATE);
SELECT RECIPT_ID, PERSONNEL_ID_SECRETARY, PRICE_EXPENDITURE, EXPENDITURE_TYPE, EXPENDITURE_DATE FROM EXPENDITURE WHERE (RECIPT_ID = @RECIPT_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECIPT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECIPT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE_EXPENDITURE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_EXPENDITURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENDITURE_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENDITURE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[EXPENDITURE] SET [RECIPT_ID] = @RECIPT_ID, [PERSONNEL_ID_SECRETARY] = @PERSONNEL_ID_SECRETARY, [PRICE_EXPENDITURE] = @PRICE_EXPENDITURE, [EXPENDITURE_TYPE] = @EXPENDITURE_TYPE, [EXPENDITURE_DATE] = @EXPENDITURE_DATE WHERE (([RECIPT_ID] = @Original_RECIPT_ID) AND ([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ([PRICE_EXPENDITURE] = @Original_PRICE_EXPENDITURE) AND ([EXPENDITURE_TYPE] = @Original_EXPENDITURE_TYPE) AND ([EXPENDITURE_DATE] = @Original_EXPENDITURE_DATE));
SELECT RECIPT_ID, PERSONNEL_ID_SECRETARY, PRICE_EXPENDITURE, EXPENDITURE_TYPE, EXPENDITURE_DATE FROM EXPENDITURE WHERE (RECIPT_ID = @RECIPT_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECIPT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECIPT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE_EXPENDITURE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_EXPENDITURE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENDITURE_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENDITURE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECIPT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECIPT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICE_EXPENDITURE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_EXPENDITURE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPENDITURE_TYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPENDITURE_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXPENDITURE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RECIPT_ID, PERSONNEL_ID_SECRETARY, PRICE_EXPENDITURE, EXPENDITURE_TYPE, EX" +
                "PENDITURE_DATE FROM dbo.EXPENDITURE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.EXPENDITUREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.EXPENDITUREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.EXPENDITUREDataTable dataTable = new clinicDatabasaeDataSet.EXPENDITUREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.EXPENDITUREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "EXPENDITURE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RECIPT_ID, int Original_PERSONNEL_ID_SECRETARY, int Original_PRICE_EXPENDITURE, string Original_EXPENDITURE_TYPE, System.DateTime Original_EXPENDITURE_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RECIPT_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_PRICE_EXPENDITURE));
            if ((Original_EXPENDITURE_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_EXPENDITURE_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_EXPENDITURE_TYPE));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_EXPENDITURE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int RECIPT_ID, int PERSONNEL_ID_SECRETARY, int PRICE_EXPENDITURE, string EXPENDITURE_TYPE, System.DateTime EXPENDITURE_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(RECIPT_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PERSONNEL_ID_SECRETARY));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(PRICE_EXPENDITURE));
            if ((EXPENDITURE_TYPE == null)) {
                throw new global::System.ArgumentNullException("EXPENDITURE_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(EXPENDITURE_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(EXPENDITURE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int RECIPT_ID, int PERSONNEL_ID_SECRETARY, int PRICE_EXPENDITURE, string EXPENDITURE_TYPE, System.DateTime EXPENDITURE_DATE, int Original_RECIPT_ID, int Original_PERSONNEL_ID_SECRETARY, int Original_PRICE_EXPENDITURE, string Original_EXPENDITURE_TYPE, System.DateTime Original_EXPENDITURE_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(RECIPT_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(PERSONNEL_ID_SECRETARY));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(PRICE_EXPENDITURE));
            if ((EXPENDITURE_TYPE == null)) {
                throw new global::System.ArgumentNullException("EXPENDITURE_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(EXPENDITURE_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(EXPENDITURE_DATE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_RECIPT_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_PRICE_EXPENDITURE));
            if ((Original_EXPENDITURE_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_EXPENDITURE_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_EXPENDITURE_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_EXPENDITURE_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int PERSONNEL_ID_SECRETARY, int PRICE_EXPENDITURE, string EXPENDITURE_TYPE, System.DateTime EXPENDITURE_DATE, int Original_RECIPT_ID, int Original_PERSONNEL_ID_SECRETARY, int Original_PRICE_EXPENDITURE, string Original_EXPENDITURE_TYPE, System.DateTime Original_EXPENDITURE_DATE) {
            return this.Update(Original_RECIPT_ID, PERSONNEL_ID_SECRETARY, PRICE_EXPENDITURE, EXPENDITURE_TYPE, EXPENDITURE_DATE, Original_RECIPT_ID, Original_PERSONNEL_ID_SECRETARY, Original_PRICE_EXPENDITURE, Original_EXPENDITURE_TYPE, Original_EXPENDITURE_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MEDICAL_HISTORYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public MEDICAL_HISTORYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MEDICAL_HISTORY";
            tableMapping.ColumnMappings.Add("PATIENT_ID", "PATIENT_ID");
            tableMapping.ColumnMappings.Add("DATE_MEDICAL_HISTORY", "DATE_MEDICAL_HISTORY");
            tableMapping.ColumnMappings.Add("MEDICAL_CONDITION", "MEDICAL_CONDITION");
            tableMapping.ColumnMappings.Add("PRESCRIBED_MEDICATION", "PRESCRIBED_MEDICATION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MEDICAL_HISTORY] WHERE (([PATIENT_ID] = @Original_PATIENT_ID) AND ([DATE_MEDICAL_HISTORY] = @Original_DATE_MEDICAL_HISTORY) AND ([MEDICAL_CONDITION] = @Original_MEDICAL_CONDITION) AND ([PRESCRIBED_MEDICATION] = @Original_PRESCRIBED_MEDICATION))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_MEDICAL_HISTORY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_MEDICAL_HISTORY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEDICAL_CONDITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICAL_CONDITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRESCRIBED_MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRESCRIBED_MEDICATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MEDICAL_HISTORY] ([PATIENT_ID], [DATE_MEDICAL_HISTORY], [MEDICAL_CONDITION], [PRESCRIBED_MEDICATION]) VALUES (@PATIENT_ID, @DATE_MEDICAL_HISTORY, @MEDICAL_CONDITION, @PRESCRIBED_MEDICATION);
SELECT PATIENT_ID, DATE_MEDICAL_HISTORY, MEDICAL_CONDITION, PRESCRIBED_MEDICATION FROM MEDICAL_HISTORY WHERE (DATE_MEDICAL_HISTORY = @DATE_MEDICAL_HISTORY) AND (PATIENT_ID = @PATIENT_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_MEDICAL_HISTORY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_MEDICAL_HISTORY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEDICAL_CONDITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICAL_CONDITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRESCRIBED_MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRESCRIBED_MEDICATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MEDICAL_HISTORY] SET [PATIENT_ID] = @PATIENT_ID, [DATE_MEDICAL_HISTORY] = @DATE_MEDICAL_HISTORY, [MEDICAL_CONDITION] = @MEDICAL_CONDITION, [PRESCRIBED_MEDICATION] = @PRESCRIBED_MEDICATION WHERE (([PATIENT_ID] = @Original_PATIENT_ID) AND ([DATE_MEDICAL_HISTORY] = @Original_DATE_MEDICAL_HISTORY) AND ([MEDICAL_CONDITION] = @Original_MEDICAL_CONDITION) AND ([PRESCRIBED_MEDICATION] = @Original_PRESCRIBED_MEDICATION));
SELECT PATIENT_ID, DATE_MEDICAL_HISTORY, MEDICAL_CONDITION, PRESCRIBED_MEDICATION FROM MEDICAL_HISTORY WHERE (DATE_MEDICAL_HISTORY = @DATE_MEDICAL_HISTORY) AND (PATIENT_ID = @PATIENT_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_MEDICAL_HISTORY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_MEDICAL_HISTORY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEDICAL_CONDITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICAL_CONDITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRESCRIBED_MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRESCRIBED_MEDICATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_MEDICAL_HISTORY", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_MEDICAL_HISTORY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEDICAL_CONDITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDICAL_CONDITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRESCRIBED_MEDICATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRESCRIBED_MEDICATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PATIENT_ID, DATE_MEDICAL_HISTORY, MEDICAL_CONDITION, PRESCRIBED_MEDICATION" +
                " FROM dbo.MEDICAL_HISTORY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.MEDICAL_HISTORYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.MEDICAL_HISTORYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.MEDICAL_HISTORYDataTable dataTable = new clinicDatabasaeDataSet.MEDICAL_HISTORYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.MEDICAL_HISTORYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MEDICAL_HISTORY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PATIENT_ID, System.DateTime Original_DATE_MEDICAL_HISTORY, string Original_MEDICAL_CONDITION, string Original_PRESCRIBED_MEDICATION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PATIENT_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_DATE_MEDICAL_HISTORY));
            if ((Original_MEDICAL_CONDITION == null)) {
                throw new global::System.ArgumentNullException("Original_MEDICAL_CONDITION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MEDICAL_CONDITION));
            }
            if ((Original_PRESCRIBED_MEDICATION == null)) {
                throw new global::System.ArgumentNullException("Original_PRESCRIBED_MEDICATION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PRESCRIBED_MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int PATIENT_ID, System.DateTime DATE_MEDICAL_HISTORY, string MEDICAL_CONDITION, string PRESCRIBED_MEDICATION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PATIENT_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATE_MEDICAL_HISTORY));
            if ((MEDICAL_CONDITION == null)) {
                throw new global::System.ArgumentNullException("MEDICAL_CONDITION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MEDICAL_CONDITION));
            }
            if ((PRESCRIBED_MEDICATION == null)) {
                throw new global::System.ArgumentNullException("PRESCRIBED_MEDICATION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PRESCRIBED_MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int PATIENT_ID, System.DateTime DATE_MEDICAL_HISTORY, string MEDICAL_CONDITION, string PRESCRIBED_MEDICATION, int Original_PATIENT_ID, System.DateTime Original_DATE_MEDICAL_HISTORY, string Original_MEDICAL_CONDITION, string Original_PRESCRIBED_MEDICATION) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PATIENT_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATE_MEDICAL_HISTORY));
            if ((MEDICAL_CONDITION == null)) {
                throw new global::System.ArgumentNullException("MEDICAL_CONDITION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MEDICAL_CONDITION));
            }
            if ((PRESCRIBED_MEDICATION == null)) {
                throw new global::System.ArgumentNullException("PRESCRIBED_MEDICATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PRESCRIBED_MEDICATION));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_PATIENT_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_DATE_MEDICAL_HISTORY));
            if ((Original_MEDICAL_CONDITION == null)) {
                throw new global::System.ArgumentNullException("Original_MEDICAL_CONDITION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MEDICAL_CONDITION));
            }
            if ((Original_PRESCRIBED_MEDICATION == null)) {
                throw new global::System.ArgumentNullException("Original_PRESCRIBED_MEDICATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_PRESCRIBED_MEDICATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MEDICAL_CONDITION, string PRESCRIBED_MEDICATION, int Original_PATIENT_ID, System.DateTime Original_DATE_MEDICAL_HISTORY, string Original_MEDICAL_CONDITION, string Original_PRESCRIBED_MEDICATION) {
            return this.Update(Original_PATIENT_ID, Original_DATE_MEDICAL_HISTORY, MEDICAL_CONDITION, PRESCRIBED_MEDICATION, Original_PATIENT_ID, Original_DATE_MEDICAL_HISTORY, Original_MEDICAL_CONDITION, Original_PRESCRIBED_MEDICATION);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ORDERSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ORDERSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ORDERS";
            tableMapping.ColumnMappings.Add("ORDER_ID", "ORDER_ID");
            tableMapping.ColumnMappings.Add("PERSONNEL_ID_DOCTOR", "PERSONNEL_ID_DOCTOR");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("PRODUCT_TYPE", "PRODUCT_TYPE");
            tableMapping.ColumnMappings.Add("PRODUCT_NUMBER", "PRODUCT_NUMBER");
            tableMapping.ColumnMappings.Add("ORDER_DATE", "ORDER_DATE");
            tableMapping.ColumnMappings.Add("PRICE_ORDER", "PRICE_ORDER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ORDERS] WHERE (([ORDER_ID] = @Original_ORDER_ID) AND ([PERSONNEL_ID_DOCTOR] = @Original_PERSONNEL_ID_DOCTOR) AND ([PRODUCT_NAME] = @Original_PRODUCT_NAME) AND ([PRODUCT_TYPE] = @Original_PRODUCT_TYPE) AND ([PRODUCT_NUMBER] = @Original_PRODUCT_NUMBER) AND ([ORDER_DATE] = @Original_ORDER_DATE) AND ((@IsNull_PRICE_ORDER = 1 AND [PRICE_ORDER] IS NULL) OR ([PRICE_ORDER] = @Original_PRICE_ORDER)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRICE_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_ORDER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICE_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_ORDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ORDERS] ([ORDER_ID], [PERSONNEL_ID_DOCTOR], [PRODUCT_NAME], [PRODUCT_TYPE], [PRODUCT_NUMBER], [ORDER_DATE], [PRICE_ORDER]) VALUES (@ORDER_ID, @PERSONNEL_ID_DOCTOR, @PRODUCT_NAME, @PRODUCT_TYPE, @PRODUCT_NUMBER, @ORDER_DATE, @PRICE_ORDER);
SELECT ORDER_ID, PERSONNEL_ID_DOCTOR, PRODUCT_NAME, PRODUCT_TYPE, PRODUCT_NUMBER, ORDER_DATE, PRICE_ORDER FROM ORDERS WHERE (ORDER_ID = @ORDER_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_ORDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ORDERS] SET [ORDER_ID] = @ORDER_ID, [PERSONNEL_ID_DOCTOR] = @PERSONNEL_ID_DOCTOR, [PRODUCT_NAME] = @PRODUCT_NAME, [PRODUCT_TYPE] = @PRODUCT_TYPE, [PRODUCT_NUMBER] = @PRODUCT_NUMBER, [ORDER_DATE] = @ORDER_DATE, [PRICE_ORDER] = @PRICE_ORDER WHERE (([ORDER_ID] = @Original_ORDER_ID) AND ([PERSONNEL_ID_DOCTOR] = @Original_PERSONNEL_ID_DOCTOR) AND ([PRODUCT_NAME] = @Original_PRODUCT_NAME) AND ([PRODUCT_TYPE] = @Original_PRODUCT_TYPE) AND ([PRODUCT_NUMBER] = @Original_PRODUCT_NUMBER) AND ([ORDER_DATE] = @Original_ORDER_DATE) AND ((@IsNull_PRICE_ORDER = 1 AND [PRICE_ORDER] IS NULL) OR ([PRICE_ORDER] = @Original_PRICE_ORDER)));
SELECT ORDER_ID, PERSONNEL_ID_DOCTOR, PRODUCT_NAME, PRODUCT_TYPE, PRODUCT_NUMBER, ORDER_DATE, PRICE_ORDER FROM ORDERS WHERE (ORDER_ID = @ORDER_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRICE_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_ORDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_DOCTOR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_DOCTOR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_TYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_NUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRICE_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_ORDER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRICE_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRICE_ORDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ORDER_ID, PERSONNEL_ID_DOCTOR, PRODUCT_NAME, PRODUCT_TYPE, PRODUCT_NUMBER," +
                " ORDER_DATE, PRICE_ORDER FROM dbo.ORDERS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.ORDERSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.ORDERSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.ORDERSDataTable dataTable = new clinicDatabasaeDataSet.ORDERSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.ORDERSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ORDERS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ORDER_ID, int Original_PERSONNEL_ID_DOCTOR, string Original_PRODUCT_NAME, int Original_PRODUCT_TYPE, int Original_PRODUCT_NUMBER, System.DateTime Original_ORDER_DATE, global::System.Nullable<int> Original_PRICE_ORDER) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ORDER_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_PERSONNEL_ID_DOCTOR));
            if ((Original_PRODUCT_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PRODUCT_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PRODUCT_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_PRODUCT_TYPE));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_PRODUCT_NUMBER));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_ORDER_DATE));
            if ((Original_PRICE_ORDER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_PRICE_ORDER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ORDER_ID, int PERSONNEL_ID_DOCTOR, string PRODUCT_NAME, int PRODUCT_TYPE, int PRODUCT_NUMBER, System.DateTime ORDER_DATE, global::System.Nullable<int> PRICE_ORDER) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ORDER_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PERSONNEL_ID_DOCTOR));
            if ((PRODUCT_NAME == null)) {
                throw new global::System.ArgumentNullException("PRODUCT_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PRODUCT_NAME));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(PRODUCT_TYPE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(PRODUCT_NUMBER));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ORDER_DATE));
            if ((PRICE_ORDER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PRICE_ORDER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ORDER_ID, int PERSONNEL_ID_DOCTOR, string PRODUCT_NAME, int PRODUCT_TYPE, int PRODUCT_NUMBER, System.DateTime ORDER_DATE, global::System.Nullable<int> PRICE_ORDER, int Original_ORDER_ID, int Original_PERSONNEL_ID_DOCTOR, string Original_PRODUCT_NAME, int Original_PRODUCT_TYPE, int Original_PRODUCT_NUMBER, System.DateTime Original_ORDER_DATE, global::System.Nullable<int> Original_PRICE_ORDER) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ORDER_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(PERSONNEL_ID_DOCTOR));
            if ((PRODUCT_NAME == null)) {
                throw new global::System.ArgumentNullException("PRODUCT_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PRODUCT_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(PRODUCT_TYPE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(PRODUCT_NUMBER));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ORDER_DATE));
            if ((PRICE_ORDER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PRICE_ORDER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ORDER_ID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_PERSONNEL_ID_DOCTOR));
            if ((Original_PRODUCT_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PRODUCT_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PRODUCT_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_PRODUCT_TYPE));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_PRODUCT_NUMBER));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_ORDER_DATE));
            if ((Original_PRICE_ORDER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_PRICE_ORDER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int PERSONNEL_ID_DOCTOR, string PRODUCT_NAME, int PRODUCT_TYPE, int PRODUCT_NUMBER, System.DateTime ORDER_DATE, global::System.Nullable<int> PRICE_ORDER, int Original_ORDER_ID, int Original_PERSONNEL_ID_DOCTOR, string Original_PRODUCT_NAME, int Original_PRODUCT_TYPE, int Original_PRODUCT_NUMBER, System.DateTime Original_ORDER_DATE, global::System.Nullable<int> Original_PRICE_ORDER) {
            return this.Update(Original_ORDER_ID, PERSONNEL_ID_DOCTOR, PRODUCT_NAME, PRODUCT_TYPE, PRODUCT_NUMBER, ORDER_DATE, PRICE_ORDER, Original_ORDER_ID, Original_PERSONNEL_ID_DOCTOR, Original_PRODUCT_NAME, Original_PRODUCT_TYPE, Original_PRODUCT_NUMBER, Original_ORDER_DATE, Original_PRICE_ORDER);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PATIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public PATIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PATIENT";
            tableMapping.ColumnMappings.Add("PATIENT_ID", "PATIENT_ID");
            tableMapping.ColumnMappings.Add("NAME_PATIENT", "NAME_PATIENT");
            tableMapping.ColumnMappings.Add("FAMILY_NAME_PATIENT", "FAMILY_NAME_PATIENT");
            tableMapping.ColumnMappings.Add("CONTACT_NUMBER_PATIENT", "CONTACT_NUMBER_PATIENT");
            tableMapping.ColumnMappings.Add("VISIT_DATE", "VISIT_DATE");
            tableMapping.ColumnMappings.Add("LINE_NUMBER", "LINE_NUMBER");
            tableMapping.ColumnMappings.Add("REFERRAL", "REFERRAL");
            tableMapping.ColumnMappings.Add("NATIONAL_ID", "NATIONAL_ID");
            tableMapping.ColumnMappings.Add("BIRTH_CERTIFICATE_NUMBER", "BIRTH_CERTIFICATE_NUMBER");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("AGE", "AGE");
            tableMapping.ColumnMappings.Add("GENDER", "GENDER");
            tableMapping.ColumnMappings.Add("INSURANCE_ID", "INSURANCE_ID");
            tableMapping.ColumnMappings.Add("OCCUPATION", "OCCUPATION");
            tableMapping.ColumnMappings.Add("EDUCATION_DEGREE", "EDUCATION_DEGREE");
            tableMapping.ColumnMappings.Add("NUMBER_OF_OFFSPRINGS", "NUMBER_OF_OFFSPRINGS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PATIENT] WHERE (([PATIENT_ID] = @Original_PATIENT_ID) AND ([NAME_PATIENT] = @Original_NAME_PATIENT) AND ([FAMILY_NAME_PATIENT] = @Original_FAMILY_NAME_PATIENT) AND ([CONTACT_NUMBER_PATIENT] = @Original_CONTACT_NUMBER_PATIENT) AND ([VISIT_DATE] = @Original_VISIT_DATE) AND ([LINE_NUMBER] = @Original_LINE_NUMBER) AND ((@IsNull_REFERRAL = 1 AND [REFERRAL] IS NULL) OR ([REFERRAL] = @Original_REFERRAL)) AND ([NATIONAL_ID] = @Original_NATIONAL_ID) AND ([BIRTH_CERTIFICATE_NUMBER] = @Original_BIRTH_CERTIFICATE_NUMBER) AND ([ADDRESS] = @Original_ADDRESS) AND ([AGE] = @Original_AGE) AND ([GENDER] = @Original_GENDER) AND ((@IsNull_INSURANCE_ID = 1 AND [INSURANCE_ID] IS NULL) OR ([INSURANCE_ID] = @Original_INSURANCE_ID)) AND ([OCCUPATION] = @Original_OCCUPATION) AND ([EDUCATION_DEGREE] = @Original_EDUCATION_DEGREE) AND ([NUMBER_OF_OFFSPRINGS] = @Original_NUMBER_OF_OFFSPRINGS))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PATIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMILY_NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_PATIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTACT_NUMBER_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_PATIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VISIT_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VISIT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LINE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LINE_NUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REFERRAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERRAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REFERRAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERRAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NATIONAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NATIONAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIRTH_CERTIFICATE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRTH_CERTIFICATE_NUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AGE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GENDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INSURANCE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSURANCE_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSURANCE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSURANCE_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OCCUPATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OCCUPATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCATION_DEGREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCATION_DEGREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUMBER_OF_OFFSPRINGS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_OFFSPRINGS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PATIENT] ([PATIENT_ID], [NAME_PATIENT], [FAMILY_NAME_PATIENT], [CONTACT_NUMBER_PATIENT], [VISIT_DATE], [LINE_NUMBER], [REFERRAL], [NATIONAL_ID], [BIRTH_CERTIFICATE_NUMBER], [ADDRESS], [AGE], [GENDER], [INSURANCE_ID], [OCCUPATION], [EDUCATION_DEGREE], [NUMBER_OF_OFFSPRINGS]) VALUES (@PATIENT_ID, @NAME_PATIENT, @FAMILY_NAME_PATIENT, @CONTACT_NUMBER_PATIENT, @VISIT_DATE, @LINE_NUMBER, @REFERRAL, @NATIONAL_ID, @BIRTH_CERTIFICATE_NUMBER, @ADDRESS, @AGE, @GENDER, @INSURANCE_ID, @OCCUPATION, @EDUCATION_DEGREE, @NUMBER_OF_OFFSPRINGS);
SELECT PATIENT_ID, NAME_PATIENT, FAMILY_NAME_PATIENT, CONTACT_NUMBER_PATIENT, VISIT_DATE, LINE_NUMBER, REFERRAL, NATIONAL_ID, BIRTH_CERTIFICATE_NUMBER, ADDRESS, AGE, GENDER, INSURANCE_ID, OCCUPATION, EDUCATION_DEGREE, NUMBER_OF_OFFSPRINGS FROM PATIENT WHERE (PATIENT_ID = @PATIENT_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PATIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMILY_NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_PATIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTACT_NUMBER_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_PATIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VISIT_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VISIT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LINE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LINE_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERRAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERRAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NATIONAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NATIONAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIRTH_CERTIFICATE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRTH_CERTIFICATE_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GENDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSURANCE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSURANCE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OCCUPATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OCCUPATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCATION_DEGREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCATION_DEGREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUMBER_OF_OFFSPRINGS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_OFFSPRINGS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PATIENT] SET [PATIENT_ID] = @PATIENT_ID, [NAME_PATIENT] = @NAME_PAT" +
                "IENT, [FAMILY_NAME_PATIENT] = @FAMILY_NAME_PATIENT, [CONTACT_NUMBER_PATIENT] = @" +
                "CONTACT_NUMBER_PATIENT, [VISIT_DATE] = @VISIT_DATE, [LINE_NUMBER] = @LINE_NUMBER" +
                ", [REFERRAL] = @REFERRAL, [NATIONAL_ID] = @NATIONAL_ID, [BIRTH_CERTIFICATE_NUMBE" +
                "R] = @BIRTH_CERTIFICATE_NUMBER, [ADDRESS] = @ADDRESS, [AGE] = @AGE, [GENDER] = @" +
                "GENDER, [INSURANCE_ID] = @INSURANCE_ID, [OCCUPATION] = @OCCUPATION, [EDUCATION_D" +
                "EGREE] = @EDUCATION_DEGREE, [NUMBER_OF_OFFSPRINGS] = @NUMBER_OF_OFFSPRINGS WHERE" +
                " (([PATIENT_ID] = @Original_PATIENT_ID) AND ([NAME_PATIENT] = @Original_NAME_PAT" +
                "IENT) AND ([FAMILY_NAME_PATIENT] = @Original_FAMILY_NAME_PATIENT) AND ([CONTACT_" +
                "NUMBER_PATIENT] = @Original_CONTACT_NUMBER_PATIENT) AND ([VISIT_DATE] = @Origina" +
                "l_VISIT_DATE) AND ([LINE_NUMBER] = @Original_LINE_NUMBER) AND ((@IsNull_REFERRAL" +
                " = 1 AND [REFERRAL] IS NULL) OR ([REFERRAL] = @Original_REFERRAL)) AND ([NATIONA" +
                "L_ID] = @Original_NATIONAL_ID) AND ([BIRTH_CERTIFICATE_NUMBER] = @Original_BIRTH" +
                "_CERTIFICATE_NUMBER) AND ([ADDRESS] = @Original_ADDRESS) AND ([AGE] = @Original_" +
                "AGE) AND ([GENDER] = @Original_GENDER) AND ((@IsNull_INSURANCE_ID = 1 AND [INSUR" +
                "ANCE_ID] IS NULL) OR ([INSURANCE_ID] = @Original_INSURANCE_ID)) AND ([OCCUPATION" +
                "] = @Original_OCCUPATION) AND ([EDUCATION_DEGREE] = @Original_EDUCATION_DEGREE) " +
                "AND ([NUMBER_OF_OFFSPRINGS] = @Original_NUMBER_OF_OFFSPRINGS));\r\nSELECT PATIENT_" +
                "ID, NAME_PATIENT, FAMILY_NAME_PATIENT, CONTACT_NUMBER_PATIENT, VISIT_DATE, LINE_" +
                "NUMBER, REFERRAL, NATIONAL_ID, BIRTH_CERTIFICATE_NUMBER, ADDRESS, AGE, GENDER, I" +
                "NSURANCE_ID, OCCUPATION, EDUCATION_DEGREE, NUMBER_OF_OFFSPRINGS FROM PATIENT WHE" +
                "RE (PATIENT_ID = @PATIENT_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PATIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMILY_NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_PATIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTACT_NUMBER_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_PATIENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VISIT_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VISIT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LINE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LINE_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFERRAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERRAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NATIONAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NATIONAL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIRTH_CERTIFICATE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRTH_CERTIFICATE_NUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AGE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GENDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSURANCE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSURANCE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OCCUPATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OCCUPATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCATION_DEGREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCATION_DEGREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUMBER_OF_OFFSPRINGS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_OFFSPRINGS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PATIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMILY_NAME_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_PATIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTACT_NUMBER_PATIENT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_PATIENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VISIT_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VISIT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LINE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LINE_NUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REFERRAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERRAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REFERRAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFERRAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NATIONAL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NATIONAL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIRTH_CERTIFICATE_NUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BIRTH_CERTIFICATE_NUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AGE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GENDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GENDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INSURANCE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSURANCE_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSURANCE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSURANCE_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OCCUPATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OCCUPATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCATION_DEGREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCATION_DEGREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUMBER_OF_OFFSPRINGS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NUMBER_OF_OFFSPRINGS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PATIENT_ID, NAME_PATIENT, FAMILY_NAME_PATIENT, CONTACT_NUMBER_PATIENT, VIS" +
                "IT_DATE, LINE_NUMBER, REFERRAL, NATIONAL_ID, BIRTH_CERTIFICATE_NUMBER, ADDRESS, " +
                "AGE, GENDER, INSURANCE_ID, OCCUPATION, EDUCATION_DEGREE, NUMBER_OF_OFFSPRINGS FR" +
                "OM dbo.PATIENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.PATIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.PATIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.PATIENTDataTable dataTable = new clinicDatabasaeDataSet.PATIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.PATIENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PATIENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_PATIENT_ID, 
                    string Original_NAME_PATIENT, 
                    string Original_FAMILY_NAME_PATIENT, 
                    string Original_CONTACT_NUMBER_PATIENT, 
                    System.DateTime Original_VISIT_DATE, 
                    int Original_LINE_NUMBER, 
                    string Original_REFERRAL, 
                    int Original_NATIONAL_ID, 
                    int Original_BIRTH_CERTIFICATE_NUMBER, 
                    string Original_ADDRESS, 
                    int Original_AGE, 
                    int Original_GENDER, 
                    global::System.Nullable<int> Original_INSURANCE_ID, 
                    string Original_OCCUPATION, 
                    int Original_EDUCATION_DEGREE, 
                    int Original_NUMBER_OF_OFFSPRINGS) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PATIENT_ID));
            if ((Original_NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_PATIENT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_PATIENT));
            }
            if ((Original_FAMILY_NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("Original_FAMILY_NAME_PATIENT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FAMILY_NAME_PATIENT));
            }
            if ((Original_CONTACT_NUMBER_PATIENT == null)) {
                throw new global::System.ArgumentNullException("Original_CONTACT_NUMBER_PATIENT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CONTACT_NUMBER_PATIENT));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_VISIT_DATE));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_LINE_NUMBER));
            if ((Original_REFERRAL == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_REFERRAL));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_NATIONAL_ID));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_BIRTH_CERTIFICATE_NUMBER));
            if ((Original_ADDRESS == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ADDRESS));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_AGE));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_GENDER));
            if ((Original_INSURANCE_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_INSURANCE_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_OCCUPATION == null)) {
                throw new global::System.ArgumentNullException("Original_OCCUPATION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_OCCUPATION));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_EDUCATION_DEGREE));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_NUMBER_OF_OFFSPRINGS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int PATIENT_ID, 
                    string NAME_PATIENT, 
                    string FAMILY_NAME_PATIENT, 
                    string CONTACT_NUMBER_PATIENT, 
                    System.DateTime VISIT_DATE, 
                    int LINE_NUMBER, 
                    string REFERRAL, 
                    int NATIONAL_ID, 
                    int BIRTH_CERTIFICATE_NUMBER, 
                    string ADDRESS, 
                    int AGE, 
                    int GENDER, 
                    global::System.Nullable<int> INSURANCE_ID, 
                    string OCCUPATION, 
                    int EDUCATION_DEGREE, 
                    int NUMBER_OF_OFFSPRINGS) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PATIENT_ID));
            if ((NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("NAME_PATIENT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME_PATIENT));
            }
            if ((FAMILY_NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("FAMILY_NAME_PATIENT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FAMILY_NAME_PATIENT));
            }
            if ((CONTACT_NUMBER_PATIENT == null)) {
                throw new global::System.ArgumentNullException("CONTACT_NUMBER_PATIENT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CONTACT_NUMBER_PATIENT));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(VISIT_DATE));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(LINE_NUMBER));
            if ((REFERRAL == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(REFERRAL));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(NATIONAL_ID));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(BIRTH_CERTIFICATE_NUMBER));
            if ((ADDRESS == null)) {
                throw new global::System.ArgumentNullException("ADDRESS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ADDRESS));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(AGE));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(GENDER));
            if ((INSURANCE_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(INSURANCE_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OCCUPATION == null)) {
                throw new global::System.ArgumentNullException("OCCUPATION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(OCCUPATION));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(EDUCATION_DEGREE));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(NUMBER_OF_OFFSPRINGS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int PATIENT_ID, 
                    string NAME_PATIENT, 
                    string FAMILY_NAME_PATIENT, 
                    string CONTACT_NUMBER_PATIENT, 
                    System.DateTime VISIT_DATE, 
                    int LINE_NUMBER, 
                    string REFERRAL, 
                    int NATIONAL_ID, 
                    int BIRTH_CERTIFICATE_NUMBER, 
                    string ADDRESS, 
                    int AGE, 
                    int GENDER, 
                    global::System.Nullable<int> INSURANCE_ID, 
                    string OCCUPATION, 
                    int EDUCATION_DEGREE, 
                    int NUMBER_OF_OFFSPRINGS, 
                    int Original_PATIENT_ID, 
                    string Original_NAME_PATIENT, 
                    string Original_FAMILY_NAME_PATIENT, 
                    string Original_CONTACT_NUMBER_PATIENT, 
                    System.DateTime Original_VISIT_DATE, 
                    int Original_LINE_NUMBER, 
                    string Original_REFERRAL, 
                    int Original_NATIONAL_ID, 
                    int Original_BIRTH_CERTIFICATE_NUMBER, 
                    string Original_ADDRESS, 
                    int Original_AGE, 
                    int Original_GENDER, 
                    global::System.Nullable<int> Original_INSURANCE_ID, 
                    string Original_OCCUPATION, 
                    int Original_EDUCATION_DEGREE, 
                    int Original_NUMBER_OF_OFFSPRINGS) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PATIENT_ID));
            if ((NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("NAME_PATIENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_PATIENT));
            }
            if ((FAMILY_NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("FAMILY_NAME_PATIENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FAMILY_NAME_PATIENT));
            }
            if ((CONTACT_NUMBER_PATIENT == null)) {
                throw new global::System.ArgumentNullException("CONTACT_NUMBER_PATIENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CONTACT_NUMBER_PATIENT));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(VISIT_DATE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(LINE_NUMBER));
            if ((REFERRAL == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(REFERRAL));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(NATIONAL_ID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(BIRTH_CERTIFICATE_NUMBER));
            if ((ADDRESS == null)) {
                throw new global::System.ArgumentNullException("ADDRESS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ADDRESS));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(AGE));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(GENDER));
            if ((INSURANCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(INSURANCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OCCUPATION == null)) {
                throw new global::System.ArgumentNullException("OCCUPATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(OCCUPATION));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(EDUCATION_DEGREE));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(NUMBER_OF_OFFSPRINGS));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_PATIENT_ID));
            if ((Original_NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_PATIENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_NAME_PATIENT));
            }
            if ((Original_FAMILY_NAME_PATIENT == null)) {
                throw new global::System.ArgumentNullException("Original_FAMILY_NAME_PATIENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_FAMILY_NAME_PATIENT));
            }
            if ((Original_CONTACT_NUMBER_PATIENT == null)) {
                throw new global::System.ArgumentNullException("Original_CONTACT_NUMBER_PATIENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CONTACT_NUMBER_PATIENT));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_VISIT_DATE));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_LINE_NUMBER));
            if ((Original_REFERRAL == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_REFERRAL));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_NATIONAL_ID));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_BIRTH_CERTIFICATE_NUMBER));
            if ((Original_ADDRESS == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ADDRESS));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_AGE));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_GENDER));
            if ((Original_INSURANCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_INSURANCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_OCCUPATION == null)) {
                throw new global::System.ArgumentNullException("Original_OCCUPATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_OCCUPATION));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_EDUCATION_DEGREE));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_NUMBER_OF_OFFSPRINGS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NAME_PATIENT, 
                    string FAMILY_NAME_PATIENT, 
                    string CONTACT_NUMBER_PATIENT, 
                    System.DateTime VISIT_DATE, 
                    int LINE_NUMBER, 
                    string REFERRAL, 
                    int NATIONAL_ID, 
                    int BIRTH_CERTIFICATE_NUMBER, 
                    string ADDRESS, 
                    int AGE, 
                    int GENDER, 
                    global::System.Nullable<int> INSURANCE_ID, 
                    string OCCUPATION, 
                    int EDUCATION_DEGREE, 
                    int NUMBER_OF_OFFSPRINGS, 
                    int Original_PATIENT_ID, 
                    string Original_NAME_PATIENT, 
                    string Original_FAMILY_NAME_PATIENT, 
                    string Original_CONTACT_NUMBER_PATIENT, 
                    System.DateTime Original_VISIT_DATE, 
                    int Original_LINE_NUMBER, 
                    string Original_REFERRAL, 
                    int Original_NATIONAL_ID, 
                    int Original_BIRTH_CERTIFICATE_NUMBER, 
                    string Original_ADDRESS, 
                    int Original_AGE, 
                    int Original_GENDER, 
                    global::System.Nullable<int> Original_INSURANCE_ID, 
                    string Original_OCCUPATION, 
                    int Original_EDUCATION_DEGREE, 
                    int Original_NUMBER_OF_OFFSPRINGS) {
            return this.Update(Original_PATIENT_ID, NAME_PATIENT, FAMILY_NAME_PATIENT, CONTACT_NUMBER_PATIENT, VISIT_DATE, LINE_NUMBER, REFERRAL, NATIONAL_ID, BIRTH_CERTIFICATE_NUMBER, ADDRESS, AGE, GENDER, INSURANCE_ID, OCCUPATION, EDUCATION_DEGREE, NUMBER_OF_OFFSPRINGS, Original_PATIENT_ID, Original_NAME_PATIENT, Original_FAMILY_NAME_PATIENT, Original_CONTACT_NUMBER_PATIENT, Original_VISIT_DATE, Original_LINE_NUMBER, Original_REFERRAL, Original_NATIONAL_ID, Original_BIRTH_CERTIFICATE_NUMBER, Original_ADDRESS, Original_AGE, Original_GENDER, Original_INSURANCE_ID, Original_OCCUPATION, Original_EDUCATION_DEGREE, Original_NUMBER_OF_OFFSPRINGS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SECRETARYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public SECRETARYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SECRETARY";
            tableMapping.ColumnMappings.Add("PERSONNEL_ID_SECRETARY", "PERSONNEL_ID_SECRETARY");
            tableMapping.ColumnMappings.Add("NAME_SECRETARY", "NAME_SECRETARY");
            tableMapping.ColumnMappings.Add("FAMILY_NAME_SECRETARY", "FAMILY_NAME_SECRETARY");
            tableMapping.ColumnMappings.Add("CONTACT_NUMBER_SECRETARY", "CONTACT_NUMBER_SECRETARY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SECRETARY] WHERE (([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ([NAME_SECRETARY] = @Original_NAME_SECRETARY) AND ([FAMILY_NAME_SECRETARY] = @Original_FAMILY_NAME_SECRETARY) AND ([CONTACT_NUMBER_SECRETARY] = @Original_CONTACT_NUMBER_SECRETARY))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMILY_NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTACT_NUMBER_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SECRETARY] ([PERSONNEL_ID_SECRETARY], [NAME_SECRETARY], [FAMILY_NAME_SECRETARY], [CONTACT_NUMBER_SECRETARY]) VALUES (@PERSONNEL_ID_SECRETARY, @NAME_SECRETARY, @FAMILY_NAME_SECRETARY, @CONTACT_NUMBER_SECRETARY);
SELECT PERSONNEL_ID_SECRETARY, NAME_SECRETARY, FAMILY_NAME_SECRETARY, CONTACT_NUMBER_SECRETARY FROM SECRETARY WHERE (PERSONNEL_ID_SECRETARY = @PERSONNEL_ID_SECRETARY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMILY_NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTACT_NUMBER_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SECRETARY] SET [PERSONNEL_ID_SECRETARY] = @PERSONNEL_ID_SECRETARY, [NAME_SECRETARY] = @NAME_SECRETARY, [FAMILY_NAME_SECRETARY] = @FAMILY_NAME_SECRETARY, [CONTACT_NUMBER_SECRETARY] = @CONTACT_NUMBER_SECRETARY WHERE (([PERSONNEL_ID_SECRETARY] = @Original_PERSONNEL_ID_SECRETARY) AND ([NAME_SECRETARY] = @Original_NAME_SECRETARY) AND ([FAMILY_NAME_SECRETARY] = @Original_FAMILY_NAME_SECRETARY) AND ([CONTACT_NUMBER_SECRETARY] = @Original_CONTACT_NUMBER_SECRETARY));
SELECT PERSONNEL_ID_SECRETARY, NAME_SECRETARY, FAMILY_NAME_SECRETARY, CONTACT_NUMBER_SECRETARY FROM SECRETARY WHERE (PERSONNEL_ID_SECRETARY = @PERSONNEL_ID_SECRETARY)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMILY_NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONTACT_NUMBER_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_SECRETARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PERSONNEL_ID_SECRETARY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERSONNEL_ID_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMILY_NAME_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMILY_NAME_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONTACT_NUMBER_SECRETARY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NUMBER_SECRETARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinic_System.Properties.Settings.Default.clinicDatabaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PERSONNEL_ID_SECRETARY, NAME_SECRETARY, FAMILY_NAME_SECRETARY, CONTACT_NUM" +
                "BER_SECRETARY FROM dbo.SECRETARY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(clinicDatabasaeDataSet.SECRETARYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual clinicDatabasaeDataSet.SECRETARYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clinicDatabasaeDataSet.SECRETARYDataTable dataTable = new clinicDatabasaeDataSet.SECRETARYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet.SECRETARYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(clinicDatabasaeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SECRETARY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PERSONNEL_ID_SECRETARY, string Original_NAME_SECRETARY, string Original_FAMILY_NAME_SECRETARY, string Original_CONTACT_NUMBER_SECRETARY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            if ((Original_NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_SECRETARY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_SECRETARY));
            }
            if ((Original_FAMILY_NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("Original_FAMILY_NAME_SECRETARY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FAMILY_NAME_SECRETARY));
            }
            if ((Original_CONTACT_NUMBER_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("Original_CONTACT_NUMBER_SECRETARY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CONTACT_NUMBER_SECRETARY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int PERSONNEL_ID_SECRETARY, string NAME_SECRETARY, string FAMILY_NAME_SECRETARY, string CONTACT_NUMBER_SECRETARY) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PERSONNEL_ID_SECRETARY));
            if ((NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("NAME_SECRETARY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME_SECRETARY));
            }
            if ((FAMILY_NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("FAMILY_NAME_SECRETARY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FAMILY_NAME_SECRETARY));
            }
            if ((CONTACT_NUMBER_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("CONTACT_NUMBER_SECRETARY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CONTACT_NUMBER_SECRETARY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int PERSONNEL_ID_SECRETARY, string NAME_SECRETARY, string FAMILY_NAME_SECRETARY, string CONTACT_NUMBER_SECRETARY, int Original_PERSONNEL_ID_SECRETARY, string Original_NAME_SECRETARY, string Original_FAMILY_NAME_SECRETARY, string Original_CONTACT_NUMBER_SECRETARY) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PERSONNEL_ID_SECRETARY));
            if ((NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("NAME_SECRETARY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_SECRETARY));
            }
            if ((FAMILY_NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("FAMILY_NAME_SECRETARY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FAMILY_NAME_SECRETARY));
            }
            if ((CONTACT_NUMBER_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("CONTACT_NUMBER_SECRETARY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CONTACT_NUMBER_SECRETARY));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_PERSONNEL_ID_SECRETARY));
            if ((Original_NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_SECRETARY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NAME_SECRETARY));
            }
            if ((Original_FAMILY_NAME_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("Original_FAMILY_NAME_SECRETARY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_FAMILY_NAME_SECRETARY));
            }
            if ((Original_CONTACT_NUMBER_SECRETARY == null)) {
                throw new global::System.ArgumentNullException("Original_CONTACT_NUMBER_SECRETARY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_CONTACT_NUMBER_SECRETARY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_SECRETARY, string FAMILY_NAME_SECRETARY, string CONTACT_NUMBER_SECRETARY, int Original_PERSONNEL_ID_SECRETARY, string Original_NAME_SECRETARY, string Original_FAMILY_NAME_SECRETARY, string Original_CONTACT_NUMBER_SECRETARY) {
            return this.Update(Original_PERSONNEL_ID_SECRETARY, NAME_SECRETARY, FAMILY_NAME_SECRETARY, CONTACT_NUMBER_SECRETARY, Original_PERSONNEL_ID_SECRETARY, Original_NAME_SECRETARY, Original_FAMILY_NAME_SECRETARY, Original_CONTACT_NUMBER_SECRETARY);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CLOCKING_INTableAdapter _cLOCKING_INTableAdapter;
        
        private COUNSELLINGTableAdapter _cOUNSELLINGTableAdapter;
        
        private DOCTORTableAdapter _dOCTORTableAdapter;
        
        private EXPENDITURETableAdapter _eXPENDITURETableAdapter;
        
        private MEDICAL_HISTORYTableAdapter _mEDICAL_HISTORYTableAdapter;
        
        private ORDERSTableAdapter _oRDERSTableAdapter;
        
        private PATIENTTableAdapter _pATIENTTableAdapter;
        
        private SECRETARYTableAdapter _sECRETARYTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CLOCKING_INTableAdapter CLOCKING_INTableAdapter {
            get {
                return this._cLOCKING_INTableAdapter;
            }
            set {
                this._cLOCKING_INTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public COUNSELLINGTableAdapter COUNSELLINGTableAdapter {
            get {
                return this._cOUNSELLINGTableAdapter;
            }
            set {
                this._cOUNSELLINGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DOCTORTableAdapter DOCTORTableAdapter {
            get {
                return this._dOCTORTableAdapter;
            }
            set {
                this._dOCTORTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EXPENDITURETableAdapter EXPENDITURETableAdapter {
            get {
                return this._eXPENDITURETableAdapter;
            }
            set {
                this._eXPENDITURETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MEDICAL_HISTORYTableAdapter MEDICAL_HISTORYTableAdapter {
            get {
                return this._mEDICAL_HISTORYTableAdapter;
            }
            set {
                this._mEDICAL_HISTORYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ORDERSTableAdapter ORDERSTableAdapter {
            get {
                return this._oRDERSTableAdapter;
            }
            set {
                this._oRDERSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PATIENTTableAdapter PATIENTTableAdapter {
            get {
                return this._pATIENTTableAdapter;
            }
            set {
                this._pATIENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SECRETARYTableAdapter SECRETARYTableAdapter {
            get {
                return this._sECRETARYTableAdapter;
            }
            set {
                this._sECRETARYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cLOCKING_INTableAdapter != null) 
                            && (this._cLOCKING_INTableAdapter.Connection != null))) {
                    return this._cLOCKING_INTableAdapter.Connection;
                }
                if (((this._cOUNSELLINGTableAdapter != null) 
                            && (this._cOUNSELLINGTableAdapter.Connection != null))) {
                    return this._cOUNSELLINGTableAdapter.Connection;
                }
                if (((this._dOCTORTableAdapter != null) 
                            && (this._dOCTORTableAdapter.Connection != null))) {
                    return this._dOCTORTableAdapter.Connection;
                }
                if (((this._eXPENDITURETableAdapter != null) 
                            && (this._eXPENDITURETableAdapter.Connection != null))) {
                    return this._eXPENDITURETableAdapter.Connection;
                }
                if (((this._mEDICAL_HISTORYTableAdapter != null) 
                            && (this._mEDICAL_HISTORYTableAdapter.Connection != null))) {
                    return this._mEDICAL_HISTORYTableAdapter.Connection;
                }
                if (((this._oRDERSTableAdapter != null) 
                            && (this._oRDERSTableAdapter.Connection != null))) {
                    return this._oRDERSTableAdapter.Connection;
                }
                if (((this._pATIENTTableAdapter != null) 
                            && (this._pATIENTTableAdapter.Connection != null))) {
                    return this._pATIENTTableAdapter.Connection;
                }
                if (((this._sECRETARYTableAdapter != null) 
                            && (this._sECRETARYTableAdapter.Connection != null))) {
                    return this._sECRETARYTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cLOCKING_INTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cOUNSELLINGTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dOCTORTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eXPENDITURETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mEDICAL_HISTORYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oRDERSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pATIENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sECRETARYTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(clinicDatabasaeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DOCTOR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dOCTORTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PATIENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pATIENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sECRETARYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SECRETARY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sECRETARYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cLOCKING_INTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CLOCKING_IN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cLOCKING_INTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cOUNSELLINGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.COUNSELLING.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cOUNSELLINGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eXPENDITURETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXPENDITURE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXPENDITURETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mEDICAL_HISTORYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MEDICAL_HISTORY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mEDICAL_HISTORYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oRDERSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ORDERS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oRDERSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(clinicDatabasaeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DOCTOR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dOCTORTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PATIENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pATIENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sECRETARYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SECRETARY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sECRETARYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cLOCKING_INTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CLOCKING_IN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cLOCKING_INTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cOUNSELLINGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.COUNSELLING.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cOUNSELLINGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eXPENDITURETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXPENDITURE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXPENDITURETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mEDICAL_HISTORYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MEDICAL_HISTORY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mEDICAL_HISTORYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oRDERSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ORDERS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oRDERSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(clinicDatabasaeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._oRDERSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ORDERS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oRDERSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mEDICAL_HISTORYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MEDICAL_HISTORY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mEDICAL_HISTORYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eXPENDITURETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXPENDITURE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXPENDITURETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cOUNSELLINGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.COUNSELLING.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cOUNSELLINGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cLOCKING_INTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CLOCKING_IN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cLOCKING_INTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sECRETARYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SECRETARY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sECRETARYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PATIENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pATIENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dOCTORTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DOCTOR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dOCTORTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(clinicDatabasaeDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cLOCKING_INTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cLOCKING_INTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cOUNSELLINGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cOUNSELLINGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dOCTORTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dOCTORTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eXPENDITURETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXPENDITURETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mEDICAL_HISTORYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mEDICAL_HISTORYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oRDERSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oRDERSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pATIENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pATIENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sECRETARYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sECRETARYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cLOCKING_INTableAdapter != null)) {
                    revertConnections.Add(this._cLOCKING_INTableAdapter, this._cLOCKING_INTableAdapter.Connection);
                    this._cLOCKING_INTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cLOCKING_INTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cLOCKING_INTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cLOCKING_INTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cLOCKING_INTableAdapter.Adapter);
                    }
                }
                if ((this._cOUNSELLINGTableAdapter != null)) {
                    revertConnections.Add(this._cOUNSELLINGTableAdapter, this._cOUNSELLINGTableAdapter.Connection);
                    this._cOUNSELLINGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cOUNSELLINGTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cOUNSELLINGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cOUNSELLINGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cOUNSELLINGTableAdapter.Adapter);
                    }
                }
                if ((this._dOCTORTableAdapter != null)) {
                    revertConnections.Add(this._dOCTORTableAdapter, this._dOCTORTableAdapter.Connection);
                    this._dOCTORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dOCTORTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dOCTORTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dOCTORTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dOCTORTableAdapter.Adapter);
                    }
                }
                if ((this._eXPENDITURETableAdapter != null)) {
                    revertConnections.Add(this._eXPENDITURETableAdapter, this._eXPENDITURETableAdapter.Connection);
                    this._eXPENDITURETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eXPENDITURETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eXPENDITURETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXPENDITURETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXPENDITURETableAdapter.Adapter);
                    }
                }
                if ((this._mEDICAL_HISTORYTableAdapter != null)) {
                    revertConnections.Add(this._mEDICAL_HISTORYTableAdapter, this._mEDICAL_HISTORYTableAdapter.Connection);
                    this._mEDICAL_HISTORYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mEDICAL_HISTORYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mEDICAL_HISTORYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mEDICAL_HISTORYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mEDICAL_HISTORYTableAdapter.Adapter);
                    }
                }
                if ((this._oRDERSTableAdapter != null)) {
                    revertConnections.Add(this._oRDERSTableAdapter, this._oRDERSTableAdapter.Connection);
                    this._oRDERSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oRDERSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oRDERSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oRDERSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oRDERSTableAdapter.Adapter);
                    }
                }
                if ((this._pATIENTTableAdapter != null)) {
                    revertConnections.Add(this._pATIENTTableAdapter, this._pATIENTTableAdapter.Connection);
                    this._pATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pATIENTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pATIENTTableAdapter.Adapter);
                    }
                }
                if ((this._sECRETARYTableAdapter != null)) {
                    revertConnections.Add(this._sECRETARYTableAdapter, this._sECRETARYTableAdapter.Connection);
                    this._sECRETARYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sECRETARYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sECRETARYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sECRETARYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sECRETARYTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cLOCKING_INTableAdapter != null)) {
                    this._cLOCKING_INTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cLOCKING_INTableAdapter]));
                    this._cLOCKING_INTableAdapter.Transaction = null;
                }
                if ((this._cOUNSELLINGTableAdapter != null)) {
                    this._cOUNSELLINGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cOUNSELLINGTableAdapter]));
                    this._cOUNSELLINGTableAdapter.Transaction = null;
                }
                if ((this._dOCTORTableAdapter != null)) {
                    this._dOCTORTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dOCTORTableAdapter]));
                    this._dOCTORTableAdapter.Transaction = null;
                }
                if ((this._eXPENDITURETableAdapter != null)) {
                    this._eXPENDITURETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eXPENDITURETableAdapter]));
                    this._eXPENDITURETableAdapter.Transaction = null;
                }
                if ((this._mEDICAL_HISTORYTableAdapter != null)) {
                    this._mEDICAL_HISTORYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mEDICAL_HISTORYTableAdapter]));
                    this._mEDICAL_HISTORYTableAdapter.Transaction = null;
                }
                if ((this._oRDERSTableAdapter != null)) {
                    this._oRDERSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oRDERSTableAdapter]));
                    this._oRDERSTableAdapter.Transaction = null;
                }
                if ((this._pATIENTTableAdapter != null)) {
                    this._pATIENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pATIENTTableAdapter]));
                    this._pATIENTTableAdapter.Transaction = null;
                }
                if ((this._sECRETARYTableAdapter != null)) {
                    this._sECRETARYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sECRETARYTableAdapter]));
                    this._sECRETARYTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591